{
    "docs": [
        {
            "location": "/", 
            "text": ".github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\n\n\n\n\n\n\n\n\n\n\n\n\nAbout the Project\n\n\nFabScan is an open source 3D laser scanner. The \nproject\n started in 2010 at \n\nGermany's first FabLab in Aachen\n. The FabScan PI is the next generation of the FabScan 3D Laser Scanner.\n\n\nA Raspberry Pi 2 and a Raspberry Pi camera module are used to turn the FabScan PI into a stand-alone and web-enabled 3D Laser Scanner.\n\n\nQuick Start\n\n\nThe fastest way to use the FabScanPi is to use the FabScanPi Raspbian ISO image. \nConnect all needed hardware parts, download and flash the latest ISO image:\n\n\n\n    \nLatest Release\n\n    \n\n    \n\n    A list of all released images can be found \nhere\n.\n\n    \nSince release v2016-05-15-14-05 the image files are zipped.\n\n\n\n\n\n\n\nYou have to unzip the file to get the .img file. After flashing the image to an SD card point your browser to \n\n\nhttp://[ ip-address-of-your-raspberry-pi ]\n\n\n\nIt is also possible to join the web-enabled FabScanPi user interface by pointing your browser to \n\n\nhttp://fabscanpi.local\n\n\n\nNOTE: fabscanpi.local requires zeroconf. This is povided by default on Apple devices. For Windows you will need\nto install the \nBonjour printer driver\n to access your FabScanPi over the \nlocal address. \n\n\nPurchase a Kit\n\n\nYou can purchase the FabScanPi as a kit or in parts at \nWatterott Electronics\n\n\n\n\nFabScanPi Kit\n ( contains all needed parts )\n\n\nFabScanPi HAT\n ( a Raspberry Pi HAT for FabScan )\n\n\nFabScanPi Camera Mount\n ( Raspberry Pi cam mount with LED's)\n\n\nFaBScanPi Case\n ( laser cut wooden case parts )", 
            "title": "Home"
        }, 
        {
            "location": "/#about-the-project", 
            "text": "FabScan is an open source 3D laser scanner. The  project  started in 2010 at  Germany's first FabLab in Aachen . The FabScan PI is the next generation of the FabScan 3D Laser Scanner.  A Raspberry Pi 2 and a Raspberry Pi camera module are used to turn the FabScan PI into a stand-alone and web-enabled 3D Laser Scanner.", 
            "title": "About the Project"
        }, 
        {
            "location": "/#quick-start", 
            "text": "The fastest way to use the FabScanPi is to use the FabScanPi Raspbian ISO image. \nConnect all needed hardware parts, download and flash the latest ISO image:", 
            "title": "Quick Start"
        }, 
        {
            "location": "/#purchase-a-kit", 
            "text": "You can purchase the FabScanPi as a kit or in parts at  Watterott Electronics   FabScanPi Kit  ( contains all needed parts )  FabScanPi HAT  ( a Raspberry Pi HAT for FabScan )  FabScanPi Camera Mount  ( Raspberry Pi cam mount with LED's)  FaBScanPi Case  ( laser cut wooden case parts )", 
            "title": "Purchase a Kit"
        }, 
        {
            "location": "/news/", 
            "text": "FabScanPi 0.6.0 release. (2018-11-25)\n\n\nThis release mainly fixes a lot of bugs and the Tornado Framework is introduced. This brings more \nstability to the webserver part. The whole webserver code was refactored. Since AVRDude was upgraded\nin Raspbian stretch, version 0.5.0 does not work anymore. The AVRDude bug was responsible for serial \nconnection and firmware flashing problems (it is not a bootloader problem as described in the F.A.Q).\n\n\nChangelog for this version: \n\n\n\n\nrefactored webserver backend code\n\n\nintroduced Tornado web framework\n\n\nfixed calibration non blocking bug.\n\n\nfixed flushing camera buffer\n\n\nfixed camera settings\n\n\nbetter camera stream performance (nearby live now)\n\n\nfixed gap at the beginning/end of a scan\n\n\nadded swapping support for high res scans\n\n\nfixed avrdude bug\n\n\nfixed stepper missing steps bug (aka stepper wobble)\n\n\nadded new version of frontend with some fixes\n\n\n\n\nFabScanPi 0.5.0 release. (2018-04-04)\n\n\nThe new release brings a better camera performance and also the USB cam module back. \nWe switched to a newer version of OpenCV which leads also to a better performance \nand a more stable calibration process.\n\n\nChangelog for this version:\n\n\n\n\nfixed pykka aktor threading bug in streams\n\n\nfixed bug realated to 400 step motors\n\n\nreplaced magic numbers by config values (tnx to jwalt)\n\n\nfixed typo in documentation (tnx to kradrat)\n\n\nnew documentation parts (tnx to jens hackel)\n\n\nfixed green cam bug\n\n\nadded deleting old calibration data before new calibration\n\n\nrefactored camera driver ( much faster than before )\n\n\nadded abort sequence when scanner is not calibrated\n\n\nadded new handlers for gracefull application shutdown\n\n\nfixed start stop init script and added better logging to it\n\n\n\n\nFabScanPi 0.4.3 and updated documentation. (2017-07-26)\n\n\nFirst of all i would like to thank all FabScanPi builders/users/community members for \nreporting bugs and sharing experiences. Special thanks goes to Jens Hackel for his\nawesome job on writing most of the FabScanPi documentation. \n\n\nSome users mentioned problems with FabScanPi HAT serial connection. We added a troubleshooting \nguide to the \nF.A.Q\n section of the \ndocumentation.\n\n\nChangelog for this version: \n\n\n\n\nAuto-calibration values are saved and available after a reboot. \n\n\nMeshing was refactored. \n\n\nMeshing filters are reduced to two basic filters to prevent confusion \n\n\nAdded new output formats to meshing. Available formats are ply, stl, obj, off, xyz, x3d, 3ds now.\n\n\n\n\nNew FabScanPi release with auto calibration (2017-02-01)\n\n\nA new release of the FabScanPi software with some new exciting features:\n\n\n\n\nAuto-calibration improves the scan results and simplifies the setup process.\n\n\nRead news from the FabScanPi project to stay informed about new features and improvements.\n\n\nImproved updates allow to update your installation with one click.\n\n\nfixed some major BUG's\n\n\nrefactored serial communication\n\n\n\n\nHave fun!\n\n\nAdded some example scans (2017-01-31)\n\n\nWe uploaded some FabScan example scans. You can explore them by visiting the example page. http://mariolukas.github.io/FabScanPi-Server/examples/\n\n\nFabScanPi goes slack (2016-07-10)\n\n\nTo improve the communication between FabScanPi users and enhance the support FabScanPi now uses slack. Register at\n\nhttps://fabscan.slack.com\n and join the FabScanPi community.\n\n\nFirst FabScanPi Workshop (2017-03-30)\n\n\nOn 1th of april 2017 we will provide the first FabScanPi workshop. \nIt will take place at Watterott electronic? . The workshop will include all the \nneeded parts to build your own FabScanPi. You will be guided during the whole workshop. \nAnd finally you will get a sneak preview to the nex release of the FabScanPi \nsoftware which includes autocalibration!\n\n\nMore information can be found at: https://goo.gl/mC9cHs\n\n\nAdded some example scans (2017-01-31)\n\n\nWe uploaded some FabScan example scans. You can explore them by visiting the example page. \n\nhttp://mariolukas.github.io/FabScanPi-Server/examples/\n \n\n\nFabScanPi goes slack (2016-07-10)\n\n\nTo improve the communication between FabScanPi users and enhance the support FabScanPi now uses slack. Register at\n\nhttps://fabscan.signup.team\n and join the FabScanPi community.\n\n\nWe look forward to welcoming you!", 
            "title": "News"
        }, 
        {
            "location": "/news/#fabscanpi-060-release-2018-11-25", 
            "text": "This release mainly fixes a lot of bugs and the Tornado Framework is introduced. This brings more \nstability to the webserver part. The whole webserver code was refactored. Since AVRDude was upgraded\nin Raspbian stretch, version 0.5.0 does not work anymore. The AVRDude bug was responsible for serial \nconnection and firmware flashing problems (it is not a bootloader problem as described in the F.A.Q).  Changelog for this version:    refactored webserver backend code  introduced Tornado web framework  fixed calibration non blocking bug.  fixed flushing camera buffer  fixed camera settings  better camera stream performance (nearby live now)  fixed gap at the beginning/end of a scan  added swapping support for high res scans  fixed avrdude bug  fixed stepper missing steps bug (aka stepper wobble)  added new version of frontend with some fixes", 
            "title": "FabScanPi 0.6.0 release. (2018-11-25)"
        }, 
        {
            "location": "/news/#fabscanpi-050-release-2018-04-04", 
            "text": "The new release brings a better camera performance and also the USB cam module back. \nWe switched to a newer version of OpenCV which leads also to a better performance \nand a more stable calibration process.  Changelog for this version:   fixed pykka aktor threading bug in streams  fixed bug realated to 400 step motors  replaced magic numbers by config values (tnx to jwalt)  fixed typo in documentation (tnx to kradrat)  new documentation parts (tnx to jens hackel)  fixed green cam bug  added deleting old calibration data before new calibration  refactored camera driver ( much faster than before )  added abort sequence when scanner is not calibrated  added new handlers for gracefull application shutdown  fixed start stop init script and added better logging to it", 
            "title": "FabScanPi 0.5.0 release. (2018-04-04)"
        }, 
        {
            "location": "/news/#fabscanpi-043-and-updated-documentation-2017-07-26", 
            "text": "First of all i would like to thank all FabScanPi builders/users/community members for \nreporting bugs and sharing experiences. Special thanks goes to Jens Hackel for his\nawesome job on writing most of the FabScanPi documentation.   Some users mentioned problems with FabScanPi HAT serial connection. We added a troubleshooting \nguide to the  F.A.Q  section of the \ndocumentation.  Changelog for this version:    Auto-calibration values are saved and available after a reboot.   Meshing was refactored.   Meshing filters are reduced to two basic filters to prevent confusion   Added new output formats to meshing. Available formats are ply, stl, obj, off, xyz, x3d, 3ds now.", 
            "title": "FabScanPi 0.4.3 and updated documentation. (2017-07-26)"
        }, 
        {
            "location": "/news/#new-fabscanpi-release-with-auto-calibration-2017-02-01", 
            "text": "A new release of the FabScanPi software with some new exciting features:   Auto-calibration improves the scan results and simplifies the setup process.  Read news from the FabScanPi project to stay informed about new features and improvements.  Improved updates allow to update your installation with one click.  fixed some major BUG's  refactored serial communication   Have fun!", 
            "title": "New FabScanPi release with auto calibration (2017-02-01)"
        }, 
        {
            "location": "/news/#added-some-example-scans-2017-01-31", 
            "text": "We uploaded some FabScan example scans. You can explore them by visiting the example page. http://mariolukas.github.io/FabScanPi-Server/examples/", 
            "title": "Added some example scans (2017-01-31)"
        }, 
        {
            "location": "/news/#fabscanpi-goes-slack-2016-07-10", 
            "text": "To improve the communication between FabScanPi users and enhance the support FabScanPi now uses slack. Register at https://fabscan.slack.com  and join the FabScanPi community.  First FabScanPi Workshop (2017-03-30)  On 1th of april 2017 we will provide the first FabScanPi workshop. \nIt will take place at Watterott electronic? . The workshop will include all the \nneeded parts to build your own FabScanPi. You will be guided during the whole workshop. \nAnd finally you will get a sneak preview to the nex release of the FabScanPi \nsoftware which includes autocalibration!  More information can be found at: https://goo.gl/mC9cHs  Added some example scans (2017-01-31)  We uploaded some FabScan example scans. You can explore them by visiting the example page.  http://mariolukas.github.io/FabScanPi-Server/examples/    FabScanPi goes slack (2016-07-10)  To improve the communication between FabScanPi users and enhance the support FabScanPi now uses slack. Register at https://fabscan.signup.team  and join the FabScanPi community.  We look forward to welcoming you!", 
            "title": "FabScanPi goes slack (2016-07-10)"
        }, 
        {
            "location": "/hardware/", 
            "text": "Bill of Materials\n\n\n\n\nRaspberry Pi 2 or Raspberry Pi 3\n\n\nStepper Motor, NEMA 17 type, 1.8\u00b0 step angle (200 steps/revolution)\n\n\nPololu Universal Aluminum Mounting Hub for 5mm Shaft\n\n\nMotor driver (\nSilent Step Stick\n recommended)\n\n\n5V red line laser module\n\n\n9g Servo Motor\n (not supported by the software now)\n\n\nFabScanPi HAT\n for Raspberry Pi\n\n\n12V to 5V switching regulator\n\n\nRaspberry Pi camera V2\n\n\nRaspberry Pi Camera Connection Cable - 50cm\n\n\nFabScanPi Camera Mount\n with LED ring\n\n\nFaBScanPi Case\n\n\nScrew Set\n or see the \nScrews and Washers\n table\n\n\n1x 12V / 2A power supply\n\n\n\n\nHow to Assemble the Cabinet\n\n\nThe laser cut files can be found at \nhttps://github.com/mariolukas/FabScan-Case\n\n\n\n\n\n\n\n\n\nThe FabScanPi HAT\n\n\nGeneral description\n\n\nThe FabScan HAT is basically a combination of an \nArduino\n and the old\n\nFabScan Shield\n for \nArduino\n. It provides all connectors for the hardware\nparts (like motors, servos, lasers, LED's etc.) Instead of an USB \nconnection to the Raspberry Pi, the HAT is attached on the Pi's pinheaders.\nThe HAT communicates over a serial connection with the Rasperry Pi. \n(GPIO14 and GPIO15 of the Raspberry Pi). The firmware and also updates are \nflashed automatically by the FabscanPi-Server application.\n\n\n\n\nHow to assemble the FabScanPi HAT\n\n\n\n\n _About soldering_\n\n\n\nIf you are soldering for the very fist time, we suggest to read the comic \n\"Soldering is Easy\"\n by Mitch Altman (soldering wisdom), Andie Nordgren (comic adaption) and Jeff Keyzer (layout and editing).\n\n\n\n\n\n\n\nThe FabScanPi HAT will be delivered with the main components already assembled. You only need to install the headers and connectors which fit your demand.\n\n\n\nLet's start with the female 8-pin headers for the stepper motor controllers. First the two headers which are designated with \"Stepper Turn Table\". Put one in and flip the pcb to solder the pins on the rear side. Solder one pin first and make sure the header is still in the correct position. A \"third hand\" tool or a pcb-holder are very helpful for this job.\n\n\nNow you can select between three options\n\n\n\n\n\n\nOption A:\n Two stepper motor ports for the laser adjustment or\n\n\n\n\n\n\nOption B:\n Two servo connector ports for the laser adjustment or\n\n\n\n\n\n\nOption C:\n Two stepper and two servo connector ports for the lasers (additional headers required) \n\n\n\n\n\n\n\u200b\n\n\nOption A:\n\n\nUse the remaining four 8-pin femal pin headers and install them on the pcb. You can now use the HAT with three stepper motors (1x turn table, 2x laser control)\n\n\n\n\nOption B:\n\n\nUse an electronics wire cutter to cut off two 3-pin male headers from the long male-header. Put them into the pinholes labeled \"Servo opt.\" You can now use the HAT with one stepper motors (1x turn table) and two servos (2x servo opt.).\n\n\n\n\nOption C:\n\n\nIf you are unsure about using servos or stepper motors you can install both. Therefore you'll need to buy four 8-pin female headers which are at least 8 mm of height. Install them at the pinholes for the \"Stepper Laser 1 and 2\". Also cut off two 3-pin male headers from the long male-header. Put them into the pinholes labeled \"Servo opt.\" Now you can use either servo controllers nor the connectors for the servos.\n\n\n\n\nConnector for the LED-Ring\n\n\nThe next connector is the JST connector for the RPi-RingLight. Make sure the direction is correct. Fix it and solder the three pins on the rear side of the PCB.\n\n\n\n\nThe pins of the JST connector on the HAT have the following configuration:\n\n\n\n\nConnectors for the stepper motors\n\n\nHere you can use the three 4-port screw terminals if your stepper cables have no connector plug. \n\n\n\n\nIf the stepper motor cables have an 4-pin female connector you can use three 4-pin male headers (to be cutted off from the long header).\n\n\n\n\nConnector for Laser(s) and Laser safety switch\n\n\nThe next connector to be installed is the 6-port screw terminal. It must be soldered into the corresponding pin holes between the JST connector and the 8-pin female header for the table stepper. Later this 6-port terminal will be used to connect the Laser(s) and the Laser safety switch.\n\n\n\n\nPower Connector\n (DC- jack)\n\n\nNow the DC-jack power connector will be installed into three oval pin holes across from the 2x20-pin socket header. Soldering is done from the top side of the PCB.\n\n\n\n\nAssembling the Raspberry-Pi Connector\n\n\nNow the 2x20-pin socket connector must be installed from the rear side of the PCB (where we only did soldering till now). Soldering of the 2x20-pin connector is done on the front side (where all our parts are placed). This connector is used as interface for the Raspberry-Pi.\n\n\n\n\nATTENTION:\n The power connector in the image above image is soldered in an alternative way. The recommended way is shown in the second last image.\n\n\nThe center pin is for +12V DC, the outer connector tongue is for GND.\n\n\n\n\nMount the 5V DC/DC converter or 5V external Power Source\n\n\nAdditionally to the 12V DC coming from the power supply the FabScanPi needs 5V DC. Now you have to decide if you want to use a DC/DC converter IC which generates the 5V out of the 12V from the external 12 power supply (common solution). \n\n\nFor the DC/DC converter option you can find further instructions and pictures on the \nWatterott electronic website\n.\n\n\nIf you are using another power supply which is capable of delivering 12V and 5V DC you can connect it as well. Details can be found \nhere\n.\n\n\nConnecting the Stepper Motor(s)\n\n\nThere are different kinds of stepper motos. Mostly with 4 or 6 leads. For\nconnecting the stepper motor to the FabScanPi HAT you need to know the\ncorresponding lead pairs of the motor coils. The best way to find out something\nabout the motor is to have a look at the datasheet of the motor manufacturer.\nIn the following desciptions the pairs are called (2B, 1B) and (1A, 2A).\n\n\n \n\n\n\nThere are several ways to find the pair wires without a datasheet. Some of them\nare described here:\n\n\nMethod with an ohm-meter\n\n\nSimply measure pairs of wires for their resistance. If the resistance is a few ohms \n( \n 100 \u03a9) only, you've found a pair. The other two wires should make up the other pair.\n\n\nMethods without an ohm-meter\n\n\nFirst, try turning the motor with your fingers, and notice how hard it is. Then, \nstick wires together in pairs. If the motor turns noticeable harder, you've found a pair.\nAnother method is to use an LED, hold any two wires to the ends of a LED and turn the \nmotor (twiddle in both directions), the LED will light if the wires are a pair, \nswap wires until you light the LED.\n\n\n\n\nConnecting the Lasers\n\n\nThe FabScanPi HAT provides connectors for two lasers. But only one laser\nis supported until now. Connect your laser to the connectors labeled\nwith ...\n\n\n\n\nSafety switch\n\n\nThere is the possibility to add a laser safety switch which disables the laser\nwhen the lid is opened. The FabScanPi HAT provides a connector for such a switch.\nIf you don't need a switch you still have to bridge this connector with \na cable to get the lasers work. (left image: with bridged connector, \nright image: connecting a switch)\n\n\n\n\n\n\nConnecting the Motor drivers\n\n\nTODO\n\n\nConnecting the Power Supply\n\n\nThe FabScanPi will need 12V DC and 5V DC. There are different options to fulfil this requirement:\n\n\nOption A: \n (recommended)\nConnect 12V DC to the HAT (round connector) and install a 12V DC - to - 5V DC regulator on the designated space on the HAT. Make sure the 5V power regulator can provide a current of min. 2.0A\n\n\nfor 1 turntable stepper motor, 1 PiCam and 1 laser.\n\n\n\n\n\n\n\n\n\n\nPin label\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInp.\n\n\n12V from HAT as input for regulator\n\n\n\n\n\n\n(white square)\n\n\nGround (GND)\n\n\n\n\n\n\n5V\n\n\n5V output from regulator to FabScanPi HAT\n\n\n\n\n\n\n\n\nFor the DC/DC converter option you can find further instructions and pictures on the \nWatterott electronic website\n.\n\n\nNOTE: For the final stage of constuction a more powerful power supply is needed. At the moment there are no technical specifications available.\n\n\nOption B:\n \n\n\nConnect 12V DC to the HAT (round connector) and 5V DC to the raspberry (micro USB connector). \n\n\nNOTE: Make sure you switch on the both power sources at the same time to avoid software trouble.\n\n\nOption C:\n \n\n\nConnect 12V DC to the HAT (round connector) and connect a 5V DC power source to the 5V pin regulator pin on the HAT. Make sure the 5V power source can provide a current of min. 2.0A for\n\n\n1 turntable stepper motor, 1 PiCam and 1 laser.\n\n\n\n\n\n\n\n\n\n\nPin label\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n(white square)\n\n\nGround (GND)\n\n\n\n\n\n\n5V\n\n\nOutput from external 5V power source\n\n\n\n\n\n\n\n\nNOTE: For the final stage of constuction a more powerful power supply is needed. At the moment there are no technical specifications available. Make sure you switch on the both power sources at the same time to avoid software trouble.\n\n\nConnecting the LED Ring\n\n\nThis small manual will help you to assemble the Camera and LED ring combination. You will need a light if you want to perform texture scans (Check mark is set for Color Scan).\n\n\n\n\nThis is how it should look like if you finished the assembly.\n\n\nThe Ring-Light will include the  parts you can see in the next picture below (the camera modul is sold separately):\n\n\n\n\nIMPORTANT: You will need the standard camera modul (which has a green pcb). The module used in the pictures is the IR version which has the same dimensions but different optical specifications.\n\n\nStep 1: Slide one end of the flat ribbon cable into the connector of the camera module (1). Make sure the blue plastic is on the side facing away from the camera. Push the lock bar of the connector gently into the lock position (2).\n\n\n\n\nStep 2: Merge the flat ribbon cable through the elongated hole in the LED board.\n\n\n\n\nStep 3: Put the four Screws through the holes in the camera board. The heads must be on the side where the lens is situated. Then put a spacer on every screw (as shown in the next picture). \n\n\n\n\nStep 4: Put the Camera modul on the LED board. All four screws must fit the appropriate hole. This can be a bit tricky but it is doable.\n\n\n\n\nStep 5: Put a nut on each screw an pull them hand-tight. \n\n\n\n\nNow the Camera-LED assembly is ready for installation.\n\n\nThe pins of the JST connector on the LED board have the following configuration:\n\n\n\n\nAdditional Motors for the Lasers\n\n\nTODO\n\n\nScrews and Washers\n\n\nEven if you use the screw set from Watterott, as given in the \nBOM\n, here is the the usage reference:\n\n\nScrews\n\n\n\n\n\n\n\n\nType\n\n\nLength\n\n\nQty\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\nM2\n\n\n16\n\n\n2\n\n\nServo Hitec-HS53\n\n\n\n\n\n\n\n\n\n\n2\n\n\nSecurity Switch\n\n\n\n\n\n\n\n\n\n\n1\n\n\n5mW line Laser red\n\n\n\n\n\n\nM2.5\n\n\n15\n\n\n4\n\n\nRaspberryPi\n\n\n\n\n\n\nM3\n\n\n10\n\n\n4\n\n\nStepper motor\n\n\n\n\n\n\n\n\n\n\n4\n\n\nRPi-RingLight\n\n\n\n\n\n\n\n\n\n\n4\n\n\nTurn-table Mounting Hub\n\n\n\n\n\n\n\n\nWashers\n\n\n\n\n\n\n\n\nType\n\n\nHeigth\n\n\nQty\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n3.4/4.5\n\n\n1\n\n\n4\n\n\nStepper motor\n\n\n\n\n\n\n2.5/4.5\n\n\n3\n\n\n4\n\n\nRaspberryPi", 
            "title": "Hardware"
        }, 
        {
            "location": "/hardware/#bill-of-materials", 
            "text": "Raspberry Pi 2 or Raspberry Pi 3  Stepper Motor, NEMA 17 type, 1.8\u00b0 step angle (200 steps/revolution)  Pololu Universal Aluminum Mounting Hub for 5mm Shaft  Motor driver ( Silent Step Stick  recommended)  5V red line laser module  9g Servo Motor  (not supported by the software now)  FabScanPi HAT  for Raspberry Pi  12V to 5V switching regulator  Raspberry Pi camera V2  Raspberry Pi Camera Connection Cable - 50cm  FabScanPi Camera Mount  with LED ring  FaBScanPi Case  Screw Set  or see the  Screws and Washers  table  1x 12V / 2A power supply", 
            "title": "Bill of Materials"
        }, 
        {
            "location": "/hardware/#how-to-assemble-the-cabinet", 
            "text": "The laser cut files can be found at  https://github.com/mariolukas/FabScan-Case", 
            "title": "How to Assemble the Cabinet"
        }, 
        {
            "location": "/hardware/#the-fabscanpi-hat", 
            "text": "General description  The FabScan HAT is basically a combination of an  Arduino  and the old FabScan Shield  for  Arduino . It provides all connectors for the hardware\nparts (like motors, servos, lasers, LED's etc.) Instead of an USB \nconnection to the Raspberry Pi, the HAT is attached on the Pi's pinheaders.\nThe HAT communicates over a serial connection with the Rasperry Pi. \n(GPIO14 and GPIO15 of the Raspberry Pi). The firmware and also updates are \nflashed automatically by the FabscanPi-Server application.   How to assemble the FabScanPi HAT    _About soldering_  If you are soldering for the very fist time, we suggest to read the comic  \"Soldering is Easy\"  by Mitch Altman (soldering wisdom), Andie Nordgren (comic adaption) and Jeff Keyzer (layout and editing).    The FabScanPi HAT will be delivered with the main components already assembled. You only need to install the headers and connectors which fit your demand.  Let's start with the female 8-pin headers for the stepper motor controllers. First the two headers which are designated with \"Stepper Turn Table\". Put one in and flip the pcb to solder the pins on the rear side. Solder one pin first and make sure the header is still in the correct position. A \"third hand\" tool or a pcb-holder are very helpful for this job.  Now you can select between three options    Option A:  Two stepper motor ports for the laser adjustment or    Option B:  Two servo connector ports for the laser adjustment or    Option C:  Two stepper and two servo connector ports for the lasers (additional headers required)     \u200b  Option A:  Use the remaining four 8-pin femal pin headers and install them on the pcb. You can now use the HAT with three stepper motors (1x turn table, 2x laser control)   Option B:  Use an electronics wire cutter to cut off two 3-pin male headers from the long male-header. Put them into the pinholes labeled \"Servo opt.\" You can now use the HAT with one stepper motors (1x turn table) and two servos (2x servo opt.).   Option C:  If you are unsure about using servos or stepper motors you can install both. Therefore you'll need to buy four 8-pin female headers which are at least 8 mm of height. Install them at the pinholes for the \"Stepper Laser 1 and 2\". Also cut off two 3-pin male headers from the long male-header. Put them into the pinholes labeled \"Servo opt.\" Now you can use either servo controllers nor the connectors for the servos.   Connector for the LED-Ring  The next connector is the JST connector for the RPi-RingLight. Make sure the direction is correct. Fix it and solder the three pins on the rear side of the PCB.   The pins of the JST connector on the HAT have the following configuration:   Connectors for the stepper motors  Here you can use the three 4-port screw terminals if your stepper cables have no connector plug.    If the stepper motor cables have an 4-pin female connector you can use three 4-pin male headers (to be cutted off from the long header).   Connector for Laser(s) and Laser safety switch  The next connector to be installed is the 6-port screw terminal. It must be soldered into the corresponding pin holes between the JST connector and the 8-pin female header for the table stepper. Later this 6-port terminal will be used to connect the Laser(s) and the Laser safety switch.   Power Connector  (DC- jack)  Now the DC-jack power connector will be installed into three oval pin holes across from the 2x20-pin socket header. Soldering is done from the top side of the PCB.   Assembling the Raspberry-Pi Connector  Now the 2x20-pin socket connector must be installed from the rear side of the PCB (where we only did soldering till now). Soldering of the 2x20-pin connector is done on the front side (where all our parts are placed). This connector is used as interface for the Raspberry-Pi.   ATTENTION:  The power connector in the image above image is soldered in an alternative way. The recommended way is shown in the second last image.  The center pin is for +12V DC, the outer connector tongue is for GND.   Mount the 5V DC/DC converter or 5V external Power Source  Additionally to the 12V DC coming from the power supply the FabScanPi needs 5V DC. Now you have to decide if you want to use a DC/DC converter IC which generates the 5V out of the 12V from the external 12 power supply (common solution).   For the DC/DC converter option you can find further instructions and pictures on the  Watterott electronic website .  If you are using another power supply which is capable of delivering 12V and 5V DC you can connect it as well. Details can be found  here .", 
            "title": "The FabScanPi HAT"
        }, 
        {
            "location": "/hardware/#connecting-the-stepper-motors", 
            "text": "There are different kinds of stepper motos. Mostly with 4 or 6 leads. For\nconnecting the stepper motor to the FabScanPi HAT you need to know the\ncorresponding lead pairs of the motor coils. The best way to find out something\nabout the motor is to have a look at the datasheet of the motor manufacturer.\nIn the following desciptions the pairs are called (2B, 1B) and (1A, 2A).     There are several ways to find the pair wires without a datasheet. Some of them\nare described here:  Method with an ohm-meter  Simply measure pairs of wires for their resistance. If the resistance is a few ohms \n(   100 \u03a9) only, you've found a pair. The other two wires should make up the other pair.  Methods without an ohm-meter  First, try turning the motor with your fingers, and notice how hard it is. Then, \nstick wires together in pairs. If the motor turns noticeable harder, you've found a pair.\nAnother method is to use an LED, hold any two wires to the ends of a LED and turn the \nmotor (twiddle in both directions), the LED will light if the wires are a pair, \nswap wires until you light the LED.", 
            "title": "Connecting the Stepper Motor(s)"
        }, 
        {
            "location": "/hardware/#connecting-the-lasers", 
            "text": "The FabScanPi HAT provides connectors for two lasers. But only one laser\nis supported until now. Connect your laser to the connectors labeled\nwith ...   Safety switch  There is the possibility to add a laser safety switch which disables the laser\nwhen the lid is opened. The FabScanPi HAT provides a connector for such a switch.\nIf you don't need a switch you still have to bridge this connector with \na cable to get the lasers work. (left image: with bridged connector, \nright image: connecting a switch)", 
            "title": "Connecting the Lasers"
        }, 
        {
            "location": "/hardware/#connecting-the-motor-drivers", 
            "text": "TODO", 
            "title": "Connecting the Motor drivers"
        }, 
        {
            "location": "/hardware/#connecting-the-power-supply", 
            "text": "The FabScanPi will need 12V DC and 5V DC. There are different options to fulfil this requirement:  Option A:   (recommended)\nConnect 12V DC to the HAT (round connector) and install a 12V DC - to - 5V DC regulator on the designated space on the HAT. Make sure the 5V power regulator can provide a current of min. 2.0A  for 1 turntable stepper motor, 1 PiCam and 1 laser.      Pin label  Description      Inp.  12V from HAT as input for regulator    (white square)  Ground (GND)    5V  5V output from regulator to FabScanPi HAT     For the DC/DC converter option you can find further instructions and pictures on the  Watterott electronic website .  NOTE: For the final stage of constuction a more powerful power supply is needed. At the moment there are no technical specifications available.  Option B:    Connect 12V DC to the HAT (round connector) and 5V DC to the raspberry (micro USB connector).   NOTE: Make sure you switch on the both power sources at the same time to avoid software trouble.  Option C:    Connect 12V DC to the HAT (round connector) and connect a 5V DC power source to the 5V pin regulator pin on the HAT. Make sure the 5V power source can provide a current of min. 2.0A for  1 turntable stepper motor, 1 PiCam and 1 laser.      Pin label  Description      (white square)  Ground (GND)    5V  Output from external 5V power source     NOTE: For the final stage of constuction a more powerful power supply is needed. At the moment there are no technical specifications available. Make sure you switch on the both power sources at the same time to avoid software trouble.", 
            "title": "Connecting the Power Supply"
        }, 
        {
            "location": "/hardware/#connecting-the-led-ring", 
            "text": "This small manual will help you to assemble the Camera and LED ring combination. You will need a light if you want to perform texture scans (Check mark is set for Color Scan).   This is how it should look like if you finished the assembly.  The Ring-Light will include the  parts you can see in the next picture below (the camera modul is sold separately):   IMPORTANT: You will need the standard camera modul (which has a green pcb). The module used in the pictures is the IR version which has the same dimensions but different optical specifications.  Step 1: Slide one end of the flat ribbon cable into the connector of the camera module (1). Make sure the blue plastic is on the side facing away from the camera. Push the lock bar of the connector gently into the lock position (2).   Step 2: Merge the flat ribbon cable through the elongated hole in the LED board.   Step 3: Put the four Screws through the holes in the camera board. The heads must be on the side where the lens is situated. Then put a spacer on every screw (as shown in the next picture).    Step 4: Put the Camera modul on the LED board. All four screws must fit the appropriate hole. This can be a bit tricky but it is doable.   Step 5: Put a nut on each screw an pull them hand-tight.    Now the Camera-LED assembly is ready for installation.  The pins of the JST connector on the LED board have the following configuration:", 
            "title": "Connecting the LED Ring"
        }, 
        {
            "location": "/hardware/#additional-motors-for-the-lasers", 
            "text": "TODO", 
            "title": "Additional Motors for the Lasers"
        }, 
        {
            "location": "/hardware/#screws-and-washers", 
            "text": "Even if you use the screw set from Watterott, as given in the  BOM , here is the the usage reference:  Screws     Type  Length  Qty  Usage      M2  16  2  Servo Hitec-HS53      2  Security Switch      1  5mW line Laser red    M2.5  15  4  RaspberryPi    M3  10  4  Stepper motor      4  RPi-RingLight      4  Turn-table Mounting Hub     Washers     Type  Heigth  Qty  Usage      3.4/4.5  1  4  Stepper motor    2.5/4.5  3  4  RaspberryPi", 
            "title": "Screws and Washers"
        }, 
        {
            "location": "/software/", 
            "text": "Installing the Software\n\n\nThere ist no need to flash the Arduino which is located on the FabScan PI HAT. It will be flashed automatically with the current firmware version after the server is started.\n\n\nInstallation with FabScanPi Image (recommended)\n\n\nThe fastest way to start working with FabScan PI is to use the FabScan PI Raspbian Image. \n\n\nFor the installation you will need the following things:\n\n\n\n\nA computer with integrated or connected card reader\n\n\nA Micro-SD card with at least capacity of 8 GB\n\n\nA software to format the SD card (e.g. \nSD-Formatter\n)\n\n\nA software to install the image on the SD card (e.g. \nWin32DiskImager\n)\n\n\nThe latest \nFabScan PI Raspbian image\n\n\n\n\nDownload the SD-Formatter an the Win32Disk image software and install them on your computer. Tip: During the installation takes place you can already download and unzip the latest FabScan PI image and save some time. In the end you should have a file with .img extension.\n\n\nNow insert the Micro-SD card into the card reader which is connected with your computer.\n\n\n\n\nStart the SD-Formatter software and select the correct device letter. Double-check that because otherwise there is a risk of formatting another drive. Note: The displayed size of the selected card my vary from the physical size. This is because of an old image which is already installed on the card.\n\n\nClick on the \"Format\" button to format the selected SD card. \n\n\n\n\nWhen the formatting process is completed an information window will pop-up. Leave the card in the reader.\n\n\n\n\nExit the SD-Formatter and start the Win32DiskImager for transferring the image on the freshly formatted card.\n\n\n\n\nSelect same device as before in the SD-Formatter software. Click on the folder icon and select the image file in your file system. Normally it should be in your browser's download folder. Make sure to unzip it first to get the image with .img extension.\n\n\n\n\nClick on the \"Write\" button and the installation process will begin to start. When it's finished you will be informed by a pop-up.  Click on the \"exit\" button to close Win32DiskImager.\n\n\n\n\nNow your SD-Card is ready to be put into the card slot of your FabScanPi.\n\n\nAfter the image is flashed and the Raspberry Pi is up and running follow the instructions in the \nUsage section\n\n\nInstalling with fresh Raspbian and packages\n\n\nThis description assumes that you have a SD card with a fresh Raspbian image on it. \n\n\nFirst add the fabscan repository to your source list. \n\n\necho \ndeb http://archive.fabscan.org/ jessie main\n \n /etc/apt/sources.list\n\n\n\n\nThen add the FabScan PI repository key to your key chain.\n\n\nwget http://archive.fabscan.org/fabscan.public.key -O - | sudo apt-key add -\n\n\n\n\nUpdate the package list.\n\n\napt-get update\n\n\n\n\nFinish the installation with the needed packages.\n\n\napt-get install fabscanpi-server python-opencv-tbb libtbb2  python-pil python-serial python-pykka python-picamera avrdude python-semver python-scipy\n\n\n\n\nThe FabScan PI server can be started with \n\n\nsudo /etc/init.d/fabscanpi-server start\n\n\n\n\nRead \nUsage\n section for the next steps.\n\n\nBuild your own image of FabScan Pi\n\n\nThe image can be build with the FabScanPi Image build script. You will find more \n\n\ninformation \nhere\n\n\nInstallation: With Source Code\n\n\nDependencies\n\n\nFabScan PI software depends on some python libraries. You need to install pyserial, pykka, opencv with tbb support \nand picamera. The easiest way to install all dependencies is to use debians package manager apt. Some of the packages, \nlike opencv with tbb support and libtbb are not provided by the official raspbian mirrors. You need to add the\nfabscan repository to your apt source list. \n\n\nBuild Debian package\nInstall dependencies\n\n\nsudo apt-get install build-essential dpkg-dev debhelper devscripts fakeroot cdbs python-setuptools python-support\n\n\n\n\nThe package is build by calling\n\n\nmake deb\n\n\n\n\nAfterwards the package can be installed by \n\n\ndpkg -i fabscabpi-server\npackage-version\n.deb\n\n\n\n\nUpdating the Software\n\n\nUpdates can be installed with debian's apt-get package manager. Log in via ssh and check/install \nupdates with the following command.\n\n\nsudo apt-get update \n sudo apt-get dist-upgrade\n\n\n\n\nSoftware User Manual\n\n\n\n\n\n\nGetting Started\n\n\n\n\n\n\nPresets\n\n\n\n\n\n\nPerform a scan\n\n\n\n\n\n\nGenerate Mesh\n\n\n\n\n\n\nFile Operations\n\n\n\n\n\n\nFabScan Pi is tested on: \n\n\n\n\n\n\n\n\nBrowser\n\n\nOS\n\n\nVersions\n\n\n\n\n\n\n\n\n\n\n\n\nOSX, Windows\n\n\n47.0.2526.106 (64-bit), 58.0.3029.110 (64-bit)\n\n\n\n\n\n\n\n\nOSX, Windows\n\n\n43.0.4,  53.0.3 (64-Bit) , 54.0 (32bit)\n\n\n\n\n\n\n\n\nOSX\n\n\nVersion 9.1.1 (11601.6.17)\n\n\n\n\n\n\n\n\nGetting Started\n\n\n\n\nBy default the FabScanPi server binds to all interfaces on port 8080. Pointing your browser to http://ip-of-your-raspberry-pi:8080 will open the user interface. \n\n\n\n\nIf your FabScanPi has access to the internet an information window with the latest project news will pop-up. You can close it by left-clicking on the black x in the upper right corner of the grey info window. If there is a new software version available you will see a note in the upper left corner:\n\n\n\n\nFirst start-up\n\n\nBefore you proceed with the calibration and your first scan please check a few things to ensure your FabScanPi is working properly:\n\n\n\n\nClick on the duck icon (New Scan) to enter the scan menu.\n\n\nNow the turntable should turn clockwise in a constant smooth manner.\n\n\nThe laser must be on and needs to be adjusted vertically and to cross the center of the turntable. You will have to do the adjustment by hand because the servo / stepper support for the laser has not been implemented yet.\n\n\nCheck if you can see a small video preview in the lower left corner of the scan menu. Maybe there is only a turning hour glass visible. That is a known problem of some browsers but will have not effect the scanner's function.\n\n\nClick on the X (Cancel) to get back to the main menu.\n\n\n\n\n\n\nCalibration\n\n\nBefore you can start with your first scans you must perform a calibration. That is necessary because every Scanner housing is a bit different.  By calibrating your scanner the software will get the exact parameters of your FabScanPi. You will have to do the calibration only once, the gathered data will be stored. But we recommend to do a calibration every time when the FabScanPi has been shipped, modified or when the scan results look distorted. \n\n\nNOTE: Only after finishing the calibration successfully you will have good scan results .\n\n\nThe calibration will be done by scanning an calibration sheet with a specific pattern which must be placed on the turntable. The pattern must face the camera:\n\n\n\nNOTICE: The second laser in the image is not supported by the software yet. This will be a feature available within the next release.\n\n\nOption 1: You can can build your own calibration tool from cardboard. Print the calibration sheet onto paper and glue it to cardboard. Build a stand of another piece of cardboard. Maybe you have to fix the calibration sheet on the turntable by using some adhesive tape.\n\n\nOption 2: You have an 3D-printer available and can print out our calibration sheet holder. There's also a different calibration sheet for external holder use.\n\n\nINFO: To get a perfectly flat and stable surface glue the calibration sheet on a piece of thick pcb (printed circuit board).\n\n\nDownload calibration mount and sheet!\n\n\nVersion V1 and V2 have the same size. Both will fit. But V2 is more printer friendly.\n\n\nNote: Please check if your print of the calibration sheet has the correct scale. Each black square should have the same side length as stated on the calibration sheet (e.g.11 mm (1,1 cm). If the size is not correct please correct the parameter \"pattern square size\" in the configuration file. \n\n\nYou can find all details in the chapter \"\nHow to Edit the Config File\n\".\n\n\nPlace the calibration sheet on the turntable facing the camera.\n\n\n\n\nPlease close the box to avoid external light sources to impact the calibration process. Start  your browser and call http://ip-of-your-raspberry-pi:8080 which will open the user interface. \n\n\nWhen you start your FabScanPi for the first time you will see an information in the upper left corner that you have to perform a calibration.\n\n\n\n\nStart the calibration procedure by clicking on the gun sight icon in the very upper left corner.\n\n\n\n\nAn information \"Calibration started\" will be displayed in the upper left corner.\n\n\n\n\nThe calibration may need several minutes. During the calibration an information about the remaining time is displayed. \n\n\n\n\nWhen the calibration was finished successfully another notification will appear for a short time in the upper left corner.\n\n\n\n\nNow you can remove the calibration pattern sheet from the turntable and start your first scan.\n\n\nNOTE: If your scan results look not like they should, probably distorted or skewed please check the calibration data in the configuration file. You can find details about the different relevant parameters in the \nConfig File Values\n section of this documentation.\n\n\nScan Settings\n\n\nNote: The current settings are only persistent as long as the pi is up and running. The settings are saved with the scan data after a successful scan. They can be loaded to scan another object with the same settings. E.g. an object what consists of the same material, color etc. \n\n\n\n\nClick on the duckling-symbol to open the scan menu.\n\n\n\n\n\n\n\n\nThe threshold-slider (6) can be used to adjust the sensitivity of the captured data. Select the scan quality by using the other slider (7). \n  Note: The better the scan the longer is the required capture time. Sometimes it is better to start with a low resolution to control the selected settings result. If the result is nice you can perform a higher resolution scan with the same settings.\n\n\n\n\n\n\nBy clicking on the contrast-icon (3) you will get access to the camera settings menu. For adjusting the camera presets three sliders for saturation, brightness and contrast are available.\n\n\n\n\nClick on the light-symbol (4) to get access to the lighting menu.\n\n\n\n\nHere you can use the sliders to change the brightness and color of the (optional) light source. When all three sliders are at the very left end the light is off. Watch the preview in the lower left corner of the menu.\n\n\n\nNote: The setting in the lighting menu will only cause an effect if an optional WS2812-compatible light source (e.g. Adafruit NeoPixel LED-Ring or FabScanPi-Camera-Holder) is installed.\nClick on the  arrows-and-circle symbol (5) to get access to the alignment menu.\n\n\n\nPerform a scan\n\n\nColor Scan\n\n\n\n\nMake sure your FabScanPi is switched on, an object is placed on the turntable and the lid / the optional laser safety switch is closed.\n\n\nOpen the web-interface as described in chapter \n  \nGetting Started\n.\n\n\nClick on the duckling-symbol to open the scan menu.\n\n\n\n\n\n\nNote: If you do not have installed a light source you should perform a \nmonochrome scan\n.\n\n\n\n\nAdjust the scan preset values to your needs as described in chapter \nPresets\n.\n\n\n\n\n\n\n\n\nClick on .Start Scan. to initiate the process\n  A starting message will be displayed. Now the texture will be processed.\n\n\n\n\n\n\nThe latest photo will be displayed during the capturing process.\n\n\n\n\nWhen the texture has been captured (progress bar at 50 percent) the actual scan is initiated. A notification is displayed.\n\n\n\nA notification will be displayed when the scan is completed / file is saved.\n\n\n\n\n\nYou can now check, download or delete the scan-data.\n\n\n\n\nMonochrome scan\n\n\n\n\nMake sure your FabScanPi is switched on, an object is placed on the turntable and the lid / the optional laser safety switch is closed.\n\n\nOpen the web-interface as described in chapter \n  \nGetting Started\n.\n\n\nClick on the duckling-symbol to open the scan menu.\n\n\n\n\n\n\n\n\nAdjust the scan preset values to your needs as described in chapter \nPresets\n.\n\n\nUncheck the color-scan option (8)\n\n\n\n\n\n\n\n\nClick on .Start Scan. to initiate the process\n  A starting message will be displayed and the scan process is started.\n\n\n\n\n\n\nWhen the scan is completed / file is saved a notification will be displayed. \n\n\n\n\n\nYou can now check, download or delete the scan-data.\n\n\n\n\nGenerate Mesh\n\n\nThe FabScanPi software includes a feature to convert a scan into a mesh-file. This mesh-file can be used for 3D-printing.\nNote: To generate a mesh-file a scan must have been performed. It is also possible to load a scan-file which has been saved previously. \n\n\n\n\n\n\nClick on the options icon to open the options menu.\n  \n\n\n\n\n\n\nThe options menu will open and you can see the index card of the loaded file.\n  \n\n\n\n\n\n\nClick on the magic wand icon to open the menu for the MeshLab filter.\n  \n\n\n\n\n\n\nNow select one of the Meshlab filters and the file format for the future mesh file.\n\n\n\n\n\n\nClick on \"Start Meshing\" to activate the conversion process. \n  \n\n\n\n\n\n\nThe conversion starts and the main menu appears. A notification is displayed as well.\nNote: Depending on the size and complexity of the scan file as well as the type of selected filter the conversion process may take some time.\n\n\n\nWhen the mesh-file is available a notification is displayed.\n\n\n\n\n\n\n\nAgain open the options menu. Another index card for the mesh-file has been added.\n\n\n\n\n\n\nClick on the mesh-file index card.\n\n\n\n\n\n\nYou can now click on the download-icon to download the mesh-file to your computer or click on the trashbasket icon to delete the mesh-file.\n  \n\n\n\n\n\n\nFile Operations\n\n\n\n\nLoad files\n\n\n\n\nA scan result which has been saved to the FabScanPi memory previously can be reloaded. Go to the main menu and click on the folder-icon at the left side of the menu bar.\n\n\n\n\n\nScroll through the displayed file inventory and click on the icon of the wanted file.\n\n\n\n\n\n\nNow the selected file will be loaded which may need some time. After the loading process is finished a notification will be displayed.\n\n\n\n\n\nDelete files\n\n\n\n\nDelete a scan-file\n\nA scan result which has been saved to the FabScanPi memory previously can be deleted. To do that it must be loaded and displayed on the virtual turntable in the main menu.\n-Click on the options-icon on the right side of the menu bar.\n\n\n\nClick on the wastebasket-icon to delete the scan-file.\nNOTE: By deleting a scan file the corresponding mesh file (if available) will be deleted instantly.\n\n\nDelete a mesh-file\n\nNote: If a mesh file is available a second slide for the mesh file will be displayed.\n\n\n\nBy selecting the mesh slide and clicking on the wastebasket-icon the mesh-file can be deleted separately. \n\n\n\n\n\nDownload Files\n\n  It is possible to download generated files (either scan- or mesh-files) from the FabScanPi via the web-based user interface. \n\n\n\n\nDownload a scan-file\n\nNote: Before you can download a file it must be \nloaded\n and displayed on the virtual turntable in the main menu.\n\n\n\n\n\n\nGo to the main menu.\n\n\n\n\n\n\nClick on the options-icon on the right side of the menu bar.\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the download-icon to download the mesh-file\n\n\n\n\n\n\nA download message (depending on the used web-browser) will be displayed\n\n\n\n\n\n\nDownload a mesh-file\n\nNote: If a mesh file is available a second slide for the mesh file will be displayed.\n\n\n\n\n\nSelect the mesh slide\n\n\nClick on the download-icon to download the mesh-file\n\n\nA download message (depending on the used web-browser) will be displayed\n\n\n\n\nConfig File Values\n\n\nA configuration file can be found in /etc/fabscanpi/default.config.json. The content of this file \nis in JSON format and can be edited with an editor of your choice (e.g. nano). Be careful and don't\nmiss brackets. JSON is really sensitive in it's format.\n\n\nNOTE: The following listing snippets are only examples and may deviate from the latest settings.\n\n\nFolders\n\n\nIn this section you can change the scan output folder and the folder where the ui is located. If \nyou don't know what you are doing, it is a good decision to keep this section untouched.\n\n\n   \nfolders\n: {\n        \nwww\n: \n/usr/share/fabscanpi/\n,\n        \nscans\n: \n/var/scans/\n\n    }\n\n\n\n\nLaser\n\n\nThis section describes the laser stepper motor values. The rotation_steps value should be used for a laser angle change (not implemented yet).Steps defines how many steps the motor can do. In the default case the motor is set to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps. \n\n\n    \nlaser\n: {\n        \nsteps\n: 3200,\n        \nnumbers\n: 1,\n        \nrotation_steps\n: 5\n    }\n\n\n\n\nScanner Calibration\n\n\nIn this section you can change the parameters of the configuration sheet. If your printout of the calibration sheet has not the exact scale you can adjust the parameters here instead of scaling the print. \n\n\nNOTE: There is a new \" 8x6 Calibration Pattern\". If you are still using the old 9x6 Pattern you'll need to modify the columns value:\n\n\n\"scanner_type\": \"laserscanner\",\n\"calibration\": {\n\n\nweight_matrix\n: [],\n\ndist_camera_matrix\n: [],\n\npattern\n: {\n    \nsquare_size\n: 11,\n    \nrows\n: 6,\n    \ncolumns\n: 8,\n    \norigin_distance\n: 35\n}\n\n\n\n\n\n\nSquare Size is the side length of one black square in millimeters.\n\n\n\n\n\n\n\n\nRows and Columns are the connection points of the black squares. The correct number is 8 for columns and 6 for rows :\n\n\n\n\n\n\n\n\nOrigin Distance is the distance between turntable surface and the upper edge of the black squares in the row close to the turntable.\n\n\n\n\nScanner Calibration Values\n\n\nIn this section you can check the calibration parameters. Please make sure you have performed the auto-calibration before starting your first scan.\nDo not change these values manually. This values are generated by the autocalibration process. \n\n\n        \ncamera_matrix\n: [\n            [\n                1285.5809999999999,\n                0.0,\n                647.60199999999998\n            ],\n            [\n                0.0,\n                1289.9490000000001,\n                835.84400000000005\n            ],\n            [\n                0.0,\n                0.0,\n                1.0\n            ]\n        ],\n        \ndistortion_vector\n: [\n            0.151,\n            -0.20300000000000001,\n            -0.0050000000000000001,\n            0.0060000000000000001,\n            -0.70899999999999996\n        ],\n        \nlaser_planes\n: [\n            {\n                \ndeviation\n: 0.052318819865,\n                \ndistance\n: 137.366403938,\n                \nnormal\n: [\n                    0.56199451,\n                    -0.01896656,\n                    0.82692348\n                ]\n            }\n        ],\n        \nplatform_translation\n: [\n            4.21176054e-03,\n            4.26178340e+01,\n            1.66114592e+02\n        ],\n        \nplatform_rotation\n: [\n            [\n                0.0,\n                9.99977231e-01,\n                6.74816764e-03\n            ],\n            [\n                4.51612662e-02,\n                6.74128255e-03,\n                -9.98956964e-01\n            ],\n            [\n                -0.99903697271524872,\n                0.00030800546235732861,\n                -0.043875189806843448\n            ]\n        ]\n    }\n\n\n\n\nMeshlab settings\n\n\n\u200bIn this section you can change the path for the converter which transforms the scanned pixel data into another format (e.g. .stl).    \n\n\n    \nmeshlab\n: {\n        \npath\n: \n/usr/bin/\n\n    }\n\n\n\n\nTable settings\n\n\nIn this section you can change the turntable settings. The radius of the turntable is in millimeters (mm). In the default case the motor is set to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps. Radius is the radius of the turntable in millimeters (mm). \n\n\n    \nprocess_numbers\n: 4,\n    \nturntable\n: {\n        \nsteps\n: 3200,\n        \nradius\n: 70\n    }\n\n\n\n\nCamera settings\n\n\nPreview Resolution is the resolution value for the settings window. Resolution is the resolution for the picamera python module. You can have a look to the documentation of picamera. If you set this to other values please be sure what you are doing, not all resolutions are supportedby the picam. Some might lead to slower image capturing.    \n\n\n    \ncamera\n: {\n        \nresolution\n: {\n            \nwidth\n: 1640,\n            \nheight\n: 1232\n        },\n        \npreview_resolution\n: {\n            \nwidth\n: 240,\n            \nheight\n: 320\n        },\n        \nrotate\n: \nTrue\n,\n        \nhflip\n: \nTrue\n,\n        \nvflip\n: \nFalse\n,\n        \ntype\n: \nPICAM\n\n    }\n\n\n\n\nSerial\n\n\nIn this section you can set your port. By default this value is not set, because theFabScanPi Server software autodetcts the correct port. Some Arduino and compatible boards differ in the port name. The port can be set if you are not using an Arduino UNO or compatible Board. In case that your Arduino is not detected and you can see an error in the /var/log/fabscanpi/fabscan.logyou should add the \"port\" attribute to your config.\n\n\nThe autoflash option is True by default, that means that the firmware is flashed automatically to the Arduino or FabScanPi HAT. If you want to use a custom board e.g. sanguinololu, you can set thisto False and flash the Firmware manually to your board. \n\u200b    \n\n\n    \nserial\n: {\n        \nbaudrate\n: 115200,\n        \nautoflash\n: \nTrue\n,\n        \nport\n: \n/dev/ttyAMA0\n\n    }\n\n\n\n\nTexture illumination\n\n\nIn this section you can change the pre-set brightness level of the LED-Ring during texture scan.\n\n\n    \ntexture_illumination\n: 140\n    }\n\n\n\n\nHow to Edit the Config File\n\n\nRemote access to change the configuration settings\n\n\nIt is most likely that you don't have a monitor nor mouse and keyboard connected to your FabScanPi all the time. But maybe you need to make some changes to the config file from time to time and you don't want to connect the peripherals everytime.\n\n\nThis can be done via a remote PC which is connected to the same network.\n\n\nConnecting as Windows User (Putty)\n\n\nFirst of all you need to download the tiny program \"PuTTY\" from http://www.putty.org/.\n\n\nPuTTY is a SSH client program which establishes the connection to your FabScanPi. There is no no graphic user interface -only a console which allows only the exchange of text. But that's enough to make some changes in the config file or to update your FabScanPi-Software.\n\n\nYou don't need to make an installation just put the putty.exe in a folder or your desktop. Of course you can start it directly from the download folder as well.\n\n\nNow you must know the IP-address which has be assigned to your FabScanPi. It is the same address you're using to get access via the webbrowser (e.g. 192.168.1.8). Usually you can check the current IP-address in the user-interface of your web-router or cable modem.\n\n\nStart \nPutty.exe\n and a window will pop up.\n\n\n\n\nType in your IP-address in the appropriate field and click on \"OPEN\".\n\n\n\n\nNow the console window opens and you must type in \"\npi\n\" as \nlogin-name\n and \"\nraspberry\n\" as \npassword\n (without the quotes). Now you should be able to see the login prompt (similar to the picture above).\n\n\nConnecting as Linux or OSX User (Terminal)\n\n\nLinux users can open a Terminal and type \"\nssh pi@fabscanpi.local\n\"  (\"\nsh pi@ip-address-of-you-pi\n\"). \nNext you are asked for a password. Type in \"\nraspberry\n\" as \npassword\n (without the quotes).\nThe next steps are described with screenshots for Putty, but the workflow is the same once the connection is \nestablished.\n\n\n\n\nChanging the config file.\n\n\nThe config file is in a different folder, so you must change into that folder by entering the command:\n\n\ncd /etc/fabscanpi/\n\n\nand press ENTER.\n\n\nTo view and modify the config file (default.config.json) you must open it with an editor and using administrator rights to be able to save the changes into the same file. The editor which is already installed is called nano. So type in:\n\n\nsudo nano default.config.json\n\n\n\n\nYou have to enter the password \"\nraspberry\n\" (without the quotes) again, because you open the editor with administrator rights.\n\n\nThe nano-editor now displays the config-file and maybe you have to enlarge the window to have a better view.\n\n\nNow you can perform the desired changes by using the keyboard. To navigate you have to use the up-, down-, left- and right-key.\n\n\n\n\nIf you finished your modification press you can save the file by pressing and holding \nCTRL\n and \nO\n (german keyboard: STRG and O). Press RETURN to confirm the filename.\n\n\nNow you can exit the editor by pressing and holding \nCTRL\n and \nX\n (german keyboard: STRG and X).\n\n\nFor the changes to take effect you must restart your FabScanPi by typing in the command\n\n\nsudo reboot\n\n\nand ENTER.\n\n\n\n\nYou can now close the PuTTY window.\n\n\nThe FabScanPi is rebooting and after a short time you can refresh your webbrowser and start using the FabScanPi with the new config settings.\n\n\nTroubleshooting\n\n\nCan not connect to Arduino.\nIs the Arduino connected to the USB port. Check the port in your fabscanpi-server configuration\nfile. Try another port e.g. /dev/ttyUSB0. \nMore information about changing the configuration can be found in \"FabScan Pi Configuration\"\nsection.\n\n\nCamera is not connected. \nCheck the cable from the Raspberry Pi to the camera module. Be careful the cable can be very\nfragil. Try another camera application for checking camera functionality e.g. \nraspistill\n.\n\n\nSetting up a WIFI connection\n\n\nThis description explains howto setup a wifi stick for raspbian. I prefer to use an EDIMAX dongle, it worked best for me. \nFirst plug in your wifi dongle and log in via ssh with password \"raspberry\" (without quotes):\n\n\nssh pi@\nyour-fabscanpi-ip\n\n\n\n\n\nFirst you have to activate the wifi option in your networking setup. \n\n\nsudo nano /etc/network/interfaces\n\n\n\n\nUncomment the folling lines and save the changes. \n\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\n\n\n\n\nNow restart your network adapters. \n\n\nsudo /etc/init.d/networking restart\n\n\n\n\nIf you type \nsudo ifconfig\n there should be a wlan0 connection in the list. \n\n\nYour fasbcanpi image is ready to go. The only things you have to do is open wpa_supplicant.conf and \ninsert your wifi ssid and your wifi secret.\n\n\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf\n\n\n\n\nSave the file and try to connect to your wifi by typing the following command.\n\n\nsudo ifup wlan0\n\n\n\n\nIn some cases you have to reboot the Raspberry Pi. Check if the wifi dongle's led is bliking.\nIf you want to change your Raspberry Pi to a fix wifi IP address you have to change the interfaces file\nto get a static wifi connection.\n\n\nsudo nano /etc/network/interfaces\n\n\n\n\nChange the files content from \n\n\nauto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\n\n\n\n\nto \n\n\nauto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet static\naddress \nip in your network\n\nnetmask \nyour netmask\n\ngateway \nyour gateway\n\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\n\n\n\n\nAfter you changed the file you can restart your network daemon.\n\n\nsudo /etc/init.d/networking restart", 
            "title": "Software"
        }, 
        {
            "location": "/software/#installing-the-software", 
            "text": "There ist no need to flash the Arduino which is located on the FabScan PI HAT. It will be flashed automatically with the current firmware version after the server is started.  Installation with FabScanPi Image (recommended)  The fastest way to start working with FabScan PI is to use the FabScan PI Raspbian Image.   For the installation you will need the following things:   A computer with integrated or connected card reader  A Micro-SD card with at least capacity of 8 GB  A software to format the SD card (e.g.  SD-Formatter )  A software to install the image on the SD card (e.g.  Win32DiskImager )  The latest  FabScan PI Raspbian image   Download the SD-Formatter an the Win32Disk image software and install them on your computer. Tip: During the installation takes place you can already download and unzip the latest FabScan PI image and save some time. In the end you should have a file with .img extension.  Now insert the Micro-SD card into the card reader which is connected with your computer.   Start the SD-Formatter software and select the correct device letter. Double-check that because otherwise there is a risk of formatting another drive. Note: The displayed size of the selected card my vary from the physical size. This is because of an old image which is already installed on the card.  Click on the \"Format\" button to format the selected SD card.    When the formatting process is completed an information window will pop-up. Leave the card in the reader.   Exit the SD-Formatter and start the Win32DiskImager for transferring the image on the freshly formatted card.   Select same device as before in the SD-Formatter software. Click on the folder icon and select the image file in your file system. Normally it should be in your browser's download folder. Make sure to unzip it first to get the image with .img extension.   Click on the \"Write\" button and the installation process will begin to start. When it's finished you will be informed by a pop-up.  Click on the \"exit\" button to close Win32DiskImager.   Now your SD-Card is ready to be put into the card slot of your FabScanPi.  After the image is flashed and the Raspberry Pi is up and running follow the instructions in the  Usage section  Installing with fresh Raspbian and packages  This description assumes that you have a SD card with a fresh Raspbian image on it.   First add the fabscan repository to your source list.   echo  deb http://archive.fabscan.org/ jessie main    /etc/apt/sources.list  Then add the FabScan PI repository key to your key chain.  wget http://archive.fabscan.org/fabscan.public.key -O - | sudo apt-key add -  Update the package list.  apt-get update  Finish the installation with the needed packages.  apt-get install fabscanpi-server python-opencv-tbb libtbb2  python-pil python-serial python-pykka python-picamera avrdude python-semver python-scipy  The FabScan PI server can be started with   sudo /etc/init.d/fabscanpi-server start  Read  Usage  section for the next steps.  Build your own image of FabScan Pi  The image can be build with the FabScanPi Image build script. You will find more   information  here  Installation: With Source Code  Dependencies  FabScan PI software depends on some python libraries. You need to install pyserial, pykka, opencv with tbb support \nand picamera. The easiest way to install all dependencies is to use debians package manager apt. Some of the packages, \nlike opencv with tbb support and libtbb are not provided by the official raspbian mirrors. You need to add the\nfabscan repository to your apt source list.   Build Debian package\nInstall dependencies  sudo apt-get install build-essential dpkg-dev debhelper devscripts fakeroot cdbs python-setuptools python-support  The package is build by calling  make deb  Afterwards the package can be installed by   dpkg -i fabscabpi-server package-version .deb", 
            "title": "Installing the Software"
        }, 
        {
            "location": "/software/#updating-the-software", 
            "text": "Updates can be installed with debian's apt-get package manager. Log in via ssh and check/install \nupdates with the following command.  sudo apt-get update   sudo apt-get dist-upgrade", 
            "title": "Updating the Software"
        }, 
        {
            "location": "/software/#software-user-manual", 
            "text": "Getting Started    Presets    Perform a scan    Generate Mesh    File Operations    FabScan Pi is tested on:      Browser  OS  Versions       OSX, Windows  47.0.2526.106 (64-bit), 58.0.3029.110 (64-bit)     OSX, Windows  43.0.4,  53.0.3 (64-Bit) , 54.0 (32bit)     OSX  Version 9.1.1 (11601.6.17)     Getting Started   By default the FabScanPi server binds to all interfaces on port 8080. Pointing your browser to http://ip-of-your-raspberry-pi:8080 will open the user interface.    If your FabScanPi has access to the internet an information window with the latest project news will pop-up. You can close it by left-clicking on the black x in the upper right corner of the grey info window. If there is a new software version available you will see a note in the upper left corner:   First start-up  Before you proceed with the calibration and your first scan please check a few things to ensure your FabScanPi is working properly:   Click on the duck icon (New Scan) to enter the scan menu.  Now the turntable should turn clockwise in a constant smooth manner.  The laser must be on and needs to be adjusted vertically and to cross the center of the turntable. You will have to do the adjustment by hand because the servo / stepper support for the laser has not been implemented yet.  Check if you can see a small video preview in the lower left corner of the scan menu. Maybe there is only a turning hour glass visible. That is a known problem of some browsers but will have not effect the scanner's function.  Click on the X (Cancel) to get back to the main menu.    Calibration  Before you can start with your first scans you must perform a calibration. That is necessary because every Scanner housing is a bit different.  By calibrating your scanner the software will get the exact parameters of your FabScanPi. You will have to do the calibration only once, the gathered data will be stored. But we recommend to do a calibration every time when the FabScanPi has been shipped, modified or when the scan results look distorted.   NOTE: Only after finishing the calibration successfully you will have good scan results .  The calibration will be done by scanning an calibration sheet with a specific pattern which must be placed on the turntable. The pattern must face the camera:  \nNOTICE: The second laser in the image is not supported by the software yet. This will be a feature available within the next release.  Option 1: You can can build your own calibration tool from cardboard. Print the calibration sheet onto paper and glue it to cardboard. Build a stand of another piece of cardboard. Maybe you have to fix the calibration sheet on the turntable by using some adhesive tape.  Option 2: You have an 3D-printer available and can print out our calibration sheet holder. There's also a different calibration sheet for external holder use.  INFO: To get a perfectly flat and stable surface glue the calibration sheet on a piece of thick pcb (printed circuit board).  Download calibration mount and sheet!  Version V1 and V2 have the same size. Both will fit. But V2 is more printer friendly.  Note: Please check if your print of the calibration sheet has the correct scale. Each black square should have the same side length as stated on the calibration sheet (e.g.11 mm (1,1 cm). If the size is not correct please correct the parameter \"pattern square size\" in the configuration file.   You can find all details in the chapter \" How to Edit the Config File \".  Place the calibration sheet on the turntable facing the camera.   Please close the box to avoid external light sources to impact the calibration process. Start  your browser and call http://ip-of-your-raspberry-pi:8080 which will open the user interface.   When you start your FabScanPi for the first time you will see an information in the upper left corner that you have to perform a calibration.   Start the calibration procedure by clicking on the gun sight icon in the very upper left corner.   An information \"Calibration started\" will be displayed in the upper left corner.   The calibration may need several minutes. During the calibration an information about the remaining time is displayed.    When the calibration was finished successfully another notification will appear for a short time in the upper left corner.   Now you can remove the calibration pattern sheet from the turntable and start your first scan.  NOTE: If your scan results look not like they should, probably distorted or skewed please check the calibration data in the configuration file. You can find details about the different relevant parameters in the  Config File Values  section of this documentation.  Scan Settings  Note: The current settings are only persistent as long as the pi is up and running. The settings are saved with the scan data after a successful scan. They can be loaded to scan another object with the same settings. E.g. an object what consists of the same material, color etc.    Click on the duckling-symbol to open the scan menu.     The threshold-slider (6) can be used to adjust the sensitivity of the captured data. Select the scan quality by using the other slider (7). \n  Note: The better the scan the longer is the required capture time. Sometimes it is better to start with a low resolution to control the selected settings result. If the result is nice you can perform a higher resolution scan with the same settings.    By clicking on the contrast-icon (3) you will get access to the camera settings menu. For adjusting the camera presets three sliders for saturation, brightness and contrast are available.   Click on the light-symbol (4) to get access to the lighting menu.   Here you can use the sliders to change the brightness and color of the (optional) light source. When all three sliders are at the very left end the light is off. Watch the preview in the lower left corner of the menu.  Note: The setting in the lighting menu will only cause an effect if an optional WS2812-compatible light source (e.g. Adafruit NeoPixel LED-Ring or FabScanPi-Camera-Holder) is installed.\nClick on the  arrows-and-circle symbol (5) to get access to the alignment menu.  Perform a scan  Color Scan   Make sure your FabScanPi is switched on, an object is placed on the turntable and the lid / the optional laser safety switch is closed.  Open the web-interface as described in chapter \n   Getting Started .  Click on the duckling-symbol to open the scan menu.    Note: If you do not have installed a light source you should perform a  monochrome scan .   Adjust the scan preset values to your needs as described in chapter  Presets .     Click on .Start Scan. to initiate the process\n  A starting message will be displayed. Now the texture will be processed.    The latest photo will be displayed during the capturing process.   When the texture has been captured (progress bar at 50 percent) the actual scan is initiated. A notification is displayed.  A notification will be displayed when the scan is completed / file is saved.   You can now check, download or delete the scan-data.   Monochrome scan   Make sure your FabScanPi is switched on, an object is placed on the turntable and the lid / the optional laser safety switch is closed.  Open the web-interface as described in chapter \n   Getting Started .  Click on the duckling-symbol to open the scan menu.     Adjust the scan preset values to your needs as described in chapter  Presets .  Uncheck the color-scan option (8)     Click on .Start Scan. to initiate the process\n  A starting message will be displayed and the scan process is started.    When the scan is completed / file is saved a notification will be displayed.    You can now check, download or delete the scan-data.   Generate Mesh  The FabScanPi software includes a feature to convert a scan into a mesh-file. This mesh-file can be used for 3D-printing.\nNote: To generate a mesh-file a scan must have been performed. It is also possible to load a scan-file which has been saved previously.     Click on the options icon to open the options menu.\n      The options menu will open and you can see the index card of the loaded file.\n      Click on the magic wand icon to open the menu for the MeshLab filter.\n      Now select one of the Meshlab filters and the file format for the future mesh file.    Click on \"Start Meshing\" to activate the conversion process. \n      The conversion starts and the main menu appears. A notification is displayed as well.\nNote: Depending on the size and complexity of the scan file as well as the type of selected filter the conversion process may take some time.  When the mesh-file is available a notification is displayed.    Again open the options menu. Another index card for the mesh-file has been added.    Click on the mesh-file index card.    You can now click on the download-icon to download the mesh-file to your computer or click on the trashbasket icon to delete the mesh-file.\n      File Operations   Load files   A scan result which has been saved to the FabScanPi memory previously can be reloaded. Go to the main menu and click on the folder-icon at the left side of the menu bar.   Scroll through the displayed file inventory and click on the icon of the wanted file.    Now the selected file will be loaded which may need some time. After the loading process is finished a notification will be displayed.   Delete files   Delete a scan-file \nA scan result which has been saved to the FabScanPi memory previously can be deleted. To do that it must be loaded and displayed on the virtual turntable in the main menu.\n-Click on the options-icon on the right side of the menu bar.  Click on the wastebasket-icon to delete the scan-file.\nNOTE: By deleting a scan file the corresponding mesh file (if available) will be deleted instantly.  Delete a mesh-file \nNote: If a mesh file is available a second slide for the mesh file will be displayed.  By selecting the mesh slide and clicking on the wastebasket-icon the mesh-file can be deleted separately.    Download Files \n  It is possible to download generated files (either scan- or mesh-files) from the FabScanPi via the web-based user interface.    Download a scan-file \nNote: Before you can download a file it must be  loaded  and displayed on the virtual turntable in the main menu.    Go to the main menu.    Click on the options-icon on the right side of the menu bar.       Click on the download-icon to download the mesh-file    A download message (depending on the used web-browser) will be displayed    Download a mesh-file \nNote: If a mesh file is available a second slide for the mesh file will be displayed.   Select the mesh slide  Click on the download-icon to download the mesh-file  A download message (depending on the used web-browser) will be displayed", 
            "title": "Software User Manual"
        }, 
        {
            "location": "/software/#config-file-values", 
            "text": "A configuration file can be found in /etc/fabscanpi/default.config.json. The content of this file \nis in JSON format and can be edited with an editor of your choice (e.g. nano). Be careful and don't\nmiss brackets. JSON is really sensitive in it's format.  NOTE: The following listing snippets are only examples and may deviate from the latest settings.  Folders  In this section you can change the scan output folder and the folder where the ui is located. If \nyou don't know what you are doing, it is a good decision to keep this section untouched.      folders : {\n         www :  /usr/share/fabscanpi/ ,\n         scans :  /var/scans/ \n    }  Laser  This section describes the laser stepper motor values. The rotation_steps value should be used for a laser angle change (not implemented yet).Steps defines how many steps the motor can do. In the default case the motor is set to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps.        laser : {\n         steps : 3200,\n         numbers : 1,\n         rotation_steps : 5\n    }  Scanner Calibration  In this section you can change the parameters of the configuration sheet. If your printout of the calibration sheet has not the exact scale you can adjust the parameters here instead of scaling the print.   NOTE: There is a new \" 8x6 Calibration Pattern\". If you are still using the old 9x6 Pattern you'll need to modify the columns value:  \"scanner_type\": \"laserscanner\",\n\"calibration\": {  weight_matrix : [], dist_camera_matrix : [], pattern : {\n     square_size : 11,\n     rows : 6,\n     columns : 8,\n     origin_distance : 35\n}   Square Size is the side length of one black square in millimeters.     Rows and Columns are the connection points of the black squares. The correct number is 8 for columns and 6 for rows :     Origin Distance is the distance between turntable surface and the upper edge of the black squares in the row close to the turntable.   Scanner Calibration Values  In this section you can check the calibration parameters. Please make sure you have performed the auto-calibration before starting your first scan.\nDo not change these values manually. This values are generated by the autocalibration process.            camera_matrix : [\n            [\n                1285.5809999999999,\n                0.0,\n                647.60199999999998\n            ],\n            [\n                0.0,\n                1289.9490000000001,\n                835.84400000000005\n            ],\n            [\n                0.0,\n                0.0,\n                1.0\n            ]\n        ],\n         distortion_vector : [\n            0.151,\n            -0.20300000000000001,\n            -0.0050000000000000001,\n            0.0060000000000000001,\n            -0.70899999999999996\n        ],\n         laser_planes : [\n            {\n                 deviation : 0.052318819865,\n                 distance : 137.366403938,\n                 normal : [\n                    0.56199451,\n                    -0.01896656,\n                    0.82692348\n                ]\n            }\n        ],\n         platform_translation : [\n            4.21176054e-03,\n            4.26178340e+01,\n            1.66114592e+02\n        ],\n         platform_rotation : [\n            [\n                0.0,\n                9.99977231e-01,\n                6.74816764e-03\n            ],\n            [\n                4.51612662e-02,\n                6.74128255e-03,\n                -9.98956964e-01\n            ],\n            [\n                -0.99903697271524872,\n                0.00030800546235732861,\n                -0.043875189806843448\n            ]\n        ]\n    }  Meshlab settings  \u200bIn this section you can change the path for the converter which transforms the scanned pixel data into another format (e.g. .stl).           meshlab : {\n         path :  /usr/bin/ \n    }  Table settings  In this section you can change the turntable settings. The radius of the turntable is in millimeters (mm). In the default case the motor is set to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps. Radius is the radius of the turntable in millimeters (mm).        process_numbers : 4,\n     turntable : {\n         steps : 3200,\n         radius : 70\n    }  Camera settings  Preview Resolution is the resolution value for the settings window. Resolution is the resolution for the picamera python module. You can have a look to the documentation of picamera. If you set this to other values please be sure what you are doing, not all resolutions are supportedby the picam. Some might lead to slower image capturing.           camera : {\n         resolution : {\n             width : 1640,\n             height : 1232\n        },\n         preview_resolution : {\n             width : 240,\n             height : 320\n        },\n         rotate :  True ,\n         hflip :  True ,\n         vflip :  False ,\n         type :  PICAM \n    }  Serial  In this section you can set your port. By default this value is not set, because theFabScanPi Server software autodetcts the correct port. Some Arduino and compatible boards differ in the port name. The port can be set if you are not using an Arduino UNO or compatible Board. In case that your Arduino is not detected and you can see an error in the /var/log/fabscanpi/fabscan.logyou should add the \"port\" attribute to your config.  The autoflash option is True by default, that means that the firmware is flashed automatically to the Arduino or FabScanPi HAT. If you want to use a custom board e.g. sanguinololu, you can set thisto False and flash the Firmware manually to your board. \n\u200b           serial : {\n         baudrate : 115200,\n         autoflash :  True ,\n         port :  /dev/ttyAMA0 \n    }  Texture illumination  In this section you can change the pre-set brightness level of the LED-Ring during texture scan.       texture_illumination : 140\n    }", 
            "title": "Config File Values"
        }, 
        {
            "location": "/software/#how-to-edit-the-config-file", 
            "text": "Remote access to change the configuration settings  It is most likely that you don't have a monitor nor mouse and keyboard connected to your FabScanPi all the time. But maybe you need to make some changes to the config file from time to time and you don't want to connect the peripherals everytime.  This can be done via a remote PC which is connected to the same network.  Connecting as Windows User (Putty)  First of all you need to download the tiny program \"PuTTY\" from http://www.putty.org/.  PuTTY is a SSH client program which establishes the connection to your FabScanPi. There is no no graphic user interface -only a console which allows only the exchange of text. But that's enough to make some changes in the config file or to update your FabScanPi-Software.  You don't need to make an installation just put the putty.exe in a folder or your desktop. Of course you can start it directly from the download folder as well.  Now you must know the IP-address which has be assigned to your FabScanPi. It is the same address you're using to get access via the webbrowser (e.g. 192.168.1.8). Usually you can check the current IP-address in the user-interface of your web-router or cable modem.  Start  Putty.exe  and a window will pop up.   Type in your IP-address in the appropriate field and click on \"OPEN\".   Now the console window opens and you must type in \" pi \" as  login-name  and \" raspberry \" as  password  (without the quotes). Now you should be able to see the login prompt (similar to the picture above).  Connecting as Linux or OSX User (Terminal)  Linux users can open a Terminal and type \" ssh pi@fabscanpi.local \"  (\" sh pi@ip-address-of-you-pi \"). \nNext you are asked for a password. Type in \" raspberry \" as  password  (without the quotes).\nThe next steps are described with screenshots for Putty, but the workflow is the same once the connection is \nestablished.   Changing the config file.  The config file is in a different folder, so you must change into that folder by entering the command:  cd /etc/fabscanpi/  and press ENTER.  To view and modify the config file (default.config.json) you must open it with an editor and using administrator rights to be able to save the changes into the same file. The editor which is already installed is called nano. So type in:  sudo nano default.config.json   You have to enter the password \" raspberry \" (without the quotes) again, because you open the editor with administrator rights.  The nano-editor now displays the config-file and maybe you have to enlarge the window to have a better view.  Now you can perform the desired changes by using the keyboard. To navigate you have to use the up-, down-, left- and right-key.   If you finished your modification press you can save the file by pressing and holding  CTRL  and  O  (german keyboard: STRG and O). Press RETURN to confirm the filename.  Now you can exit the editor by pressing and holding  CTRL  and  X  (german keyboard: STRG and X).  For the changes to take effect you must restart your FabScanPi by typing in the command  sudo reboot  and ENTER.   You can now close the PuTTY window.  The FabScanPi is rebooting and after a short time you can refresh your webbrowser and start using the FabScanPi with the new config settings.", 
            "title": "How to Edit the Config File"
        }, 
        {
            "location": "/software/#troubleshooting", 
            "text": "Can not connect to Arduino.\nIs the Arduino connected to the USB port. Check the port in your fabscanpi-server configuration\nfile. Try another port e.g. /dev/ttyUSB0. \nMore information about changing the configuration can be found in \"FabScan Pi Configuration\"\nsection.  Camera is not connected. \nCheck the cable from the Raspberry Pi to the camera module. Be careful the cable can be very\nfragil. Try another camera application for checking camera functionality e.g.  raspistill .", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/software/#setting-up-a-wifi-connection", 
            "text": "This description explains howto setup a wifi stick for raspbian. I prefer to use an EDIMAX dongle, it worked best for me. \nFirst plug in your wifi dongle and log in via ssh with password \"raspberry\" (without quotes):  ssh pi@ your-fabscanpi-ip   First you have to activate the wifi option in your networking setup.   sudo nano /etc/network/interfaces  Uncomment the folling lines and save the changes.   auto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp  Now restart your network adapters.   sudo /etc/init.d/networking restart  If you type  sudo ifconfig  there should be a wlan0 connection in the list.   Your fasbcanpi image is ready to go. The only things you have to do is open wpa_supplicant.conf and \ninsert your wifi ssid and your wifi secret.  sudo nano /etc/wpa_supplicant/wpa_supplicant.conf  Save the file and try to connect to your wifi by typing the following command.  sudo ifup wlan0  In some cases you have to reboot the Raspberry Pi. Check if the wifi dongle's led is bliking.\nIf you want to change your Raspberry Pi to a fix wifi IP address you have to change the interfaces file\nto get a static wifi connection.  sudo nano /etc/network/interfaces  Change the files content from   auto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp  to   auto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet static\naddress  ip in your network \nnetmask  your netmask \ngateway  your gateway \nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp  After you changed the file you can restart your network daemon.  sudo /etc/init.d/networking restart", 
            "title": "Setting up a WIFI connection"
        }, 
        {
            "location": "/examples/", 
            "text": "Examples\n\n\nHere are some examples of scans created with FabScanPi.\n\n\nAdditionally you can find the examples together with derived meshes as .STL files at \nGithub\n.", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#examples", 
            "text": "Here are some examples of scans created with FabScanPi.  Additionally you can find the examples together with derived meshes as .STL files at  Github .", 
            "title": "Examples"
        }, 
        {
            "location": "/developing/", 
            "text": "FabScan PI Server\n\n\nThe FabScan PI server code is located in this repository. The folder src/www contains the latest version of the \nFabScan PI web interface. \n\n\nInstall build dependencies with \napt-get install build-essential python-setuptools debhelper cdbs dh-python\n\n\nAfterwards the deb files can be build by calling \nmake deb\n\n\nFabScan PI Web Interface\n\n\nThe FabScan PI Web Interface is included in the server package. Developers can find the current code at \n\n\nhttp://github.com/mariolukas/\n\n\nThe web interface is located at /usr/local/fabscanpi-server/www/ \n\n\nFor further information have a look at the repository. \n\n\nBuilding FabScanPi Images", 
            "title": "Developing"
        }, 
        {
            "location": "/developing/#fabscan-pi-server", 
            "text": "The FabScan PI server code is located in this repository. The folder src/www contains the latest version of the \nFabScan PI web interface.   Install build dependencies with  apt-get install build-essential python-setuptools debhelper cdbs dh-python  Afterwards the deb files can be build by calling  make deb", 
            "title": "FabScan PI Server"
        }, 
        {
            "location": "/developing/#fabscan-pi-web-interface", 
            "text": "The FabScan PI Web Interface is included in the server package. Developers can find the current code at   http://github.com/mariolukas/  The web interface is located at /usr/local/fabscanpi-server/www/   For further information have a look at the repository.", 
            "title": "FabScan PI Web Interface"
        }, 
        {
            "location": "/developing/#building-fabscanpi-images", 
            "text": "", 
            "title": "Building FabScanPi Images"
        }, 
        {
            "location": "/contributing/", 
            "text": "Contributing to this project\n\n\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\n\n\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\n\n\nUsing the issue tracker\n\n\nThe issue tracker is the preferred channel for \nbug reports\n,\n\nfeatures requests\n and \nsubmitting pull\nrequests\n, but please respect the following restrictions:\n\n\n\n\n\n\nPlease \ndo not\n use the issue tracker for personal support requests (use\n  \nFabScan Group\n or \nSlack\n).\n\n\n\n\n\n\nPlease \ndo not\n derail or troll issues. Keep the discussion on topic and\n  respect the opinions of others.\n\n\n\n\n\n\n\n\nBug reports\n\n\nA bug is a \ndemonstrable problem\n that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!\n\n\nGuidelines for bug reports:\n\n\n\n\n\n\nUse the GitHub issue search\n \n check if the issue has already been\n   reported.\n\n\n\n\n\n\nCheck if the issue has been fixed\n \n try to reproduce it using the\n   latest \nmaster\n or development branch in the repository.\n\n\n\n\n\n\nIsolate the problem\n \n create a \nreduced test\n   case\n and a live example.\n\n\n\n\n\n\nA good bug report shouldn't leave others needing to chase you up for more\ninformation. Please try to be as detailed as possible in your report. What is\nyour environment? What steps will reproduce the issue? What browser(s) and OS\nexperience the problem? What would you expect to be the outcome? All these\ndetails will help people to fix any potential bugs.\n\n\nExample:\n\n\n\n\nShort and descriptive example bug report title\n\n\nA summary of the issue and the browser/OS environment in which it occurs. If\nsuitable, include the steps required to reproduce the bug.\n\n\n\n\nThis is the first step\n\n\nThis is the second step\n\n\nFurther steps, etc.\n\n\n\n\nurl\n - a link to the reduced test case\n\n\nAny other information you want to share that is relevant to the issue being\nreported. This might include the lines of code that you have identified as\ncausing the bug, and potential solutions (and your opinions on their\nmerits).\n\n\n\n\n\n\nFeature requests\n\n\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to \nyou\n to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.\n\n\n\n\nPull requests\n\n\nGood pull requests - patches, improvements, new features - are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\n\nPlease ask first\n before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.\n\n\nPlease adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).\n\n\nFollow this process if you'd like your work considered for inclusion in the\nproject:\n\n\n\n\nFork\n the project, clone your fork,\n   and configure the remotes:\n\n\n\n\nbash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/\nyour-username\n/\nrepo-name\n\n   # Navigate to the newly cloned directory\n   cd \nrepo-name\n\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/\nupstream-owner\n/\nrepo-name\n\n\n\n\nIf you cloned a while ago, get the latest changes from upstream:\n\n\n\n\nbash\n   git checkout \ndev-branch\n\n   git pull upstream \ndev-branch\n\n\n\n\nCreate a new topic branch (off the main project development branch) to\n   contain your feature, change, or fix:\n\n\n\n\nbash\n   git checkout -b \ntopic-branch-name\n\n\n\n\n\n\nCommit your changes in logical chunks. Please adhere to these \ngit commit\n   message guidelines\n\n   or your code is unlikely be merged into the main project. Use Git's\n   \ninteractive rebase\n\n   feature to tidy up your commits before making them public.\n\n\n\n\n\n\nLocally merge (or rebase) the upstream development branch into your topic branch:\n\n\n\n\n\n\nbash\n   git pull [--rebase] upstream \ndev-branch\n\n\n\n\nPush your topic branch up to your fork:\n\n\n\n\nbash\n   git push origin \ntopic-branch-name\n\n\n\n\nOpen a Pull Request\n\n    with a clear title and description.\n\n\n\n\nIMPORTANT\n: By submitting a patch, you agree to allow the project owner to\nlicense your work under the same license as that used by the project.", 
            "title": "Contributing"
        }, 
        {
            "location": "/contributing/#contributing-to-this-project", 
            "text": "Please take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.  Following these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.", 
            "title": "Contributing to this project"
        }, 
        {
            "location": "/contributing/#using-the-issue-tracker", 
            "text": "The issue tracker is the preferred channel for  bug reports , features requests  and  submitting pull\nrequests , but please respect the following restrictions:    Please  do not  use the issue tracker for personal support requests (use\n   FabScan Group  or  Slack ).    Please  do not  derail or troll issues. Keep the discussion on topic and\n  respect the opinions of others.", 
            "title": "Using the issue tracker"
        }, 
        {
            "location": "/contributing/#bug-reports", 
            "text": "A bug is a  demonstrable problem  that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!  Guidelines for bug reports:    Use the GitHub issue search    check if the issue has already been\n   reported.    Check if the issue has been fixed    try to reproduce it using the\n   latest  master  or development branch in the repository.    Isolate the problem    create a  reduced test\n   case  and a live example.    A good bug report shouldn't leave others needing to chase you up for more\ninformation. Please try to be as detailed as possible in your report. What is\nyour environment? What steps will reproduce the issue? What browser(s) and OS\nexperience the problem? What would you expect to be the outcome? All these\ndetails will help people to fix any potential bugs.  Example:   Short and descriptive example bug report title  A summary of the issue and the browser/OS environment in which it occurs. If\nsuitable, include the steps required to reproduce the bug.   This is the first step  This is the second step  Further steps, etc.   url  - a link to the reduced test case  Any other information you want to share that is relevant to the issue being\nreported. This might include the lines of code that you have identified as\ncausing the bug, and potential solutions (and your opinions on their\nmerits).", 
            "title": "Bug reports"
        }, 
        {
            "location": "/contributing/#feature-requests", 
            "text": "Feature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to  you  to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.", 
            "title": "Feature requests"
        }, 
        {
            "location": "/contributing/#pull-requests", 
            "text": "Good pull requests - patches, improvements, new features - are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.  Please ask first  before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.  Please adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).  Follow this process if you'd like your work considered for inclusion in the\nproject:   Fork  the project, clone your fork,\n   and configure the remotes:   bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/ your-username / repo-name \n   # Navigate to the newly cloned directory\n   cd  repo-name \n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/ upstream-owner / repo-name   If you cloned a while ago, get the latest changes from upstream:   bash\n   git checkout  dev-branch \n   git pull upstream  dev-branch   Create a new topic branch (off the main project development branch) to\n   contain your feature, change, or fix:   bash\n   git checkout -b  topic-branch-name    Commit your changes in logical chunks. Please adhere to these  git commit\n   message guidelines \n   or your code is unlikely be merged into the main project. Use Git's\n    interactive rebase \n   feature to tidy up your commits before making them public.    Locally merge (or rebase) the upstream development branch into your topic branch:    bash\n   git pull [--rebase] upstream  dev-branch   Push your topic branch up to your fork:   bash\n   git push origin  topic-branch-name   Open a Pull Request \n    with a clear title and description.   IMPORTANT : By submitting a patch, you agree to allow the project owner to\nlicense your work under the same license as that used by the project.", 
            "title": "Pull requests"
        }, 
        {
            "location": "/community/", 
            "text": "Slack\n\n\nUse the FabScan Slack channel for direct messaging and chat communication. \nThis is the fastest way of getting support.\n\n\nSignup here: \nhttps://fabscan.signup.team\n\n\nOr write an email to:\ninfo@fabscan.org with subject \"add me to slack\" \n\n\nGoogle Group\n\n\nFor general problems and information use the FabScan google group. \n\nhttps://groups.google.com/forum/#!forum/fabscan\n\n\nFacebook\n\n\nLike our Facebook Page.\n\nhttps://www.facebook.com/Fabscan\n\n\nTwitter\n\n\nTweets about FabScan can be found on Twitter. \n\nhttps://www.twitter.com/l_k3", 
            "title": "Community"
        }, 
        {
            "location": "/community/#slack", 
            "text": "Use the FabScan Slack channel for direct messaging and chat communication. \nThis is the fastest way of getting support.  Signup here:  https://fabscan.signup.team  Or write an email to:\ninfo@fabscan.org with subject \"add me to slack\"", 
            "title": "Slack"
        }, 
        {
            "location": "/community/#google-group", 
            "text": "For general problems and information use the FabScan google group.  https://groups.google.com/forum/#!forum/fabscan", 
            "title": "Google Group"
        }, 
        {
            "location": "/community/#facebook", 
            "text": "Like our Facebook Page. https://www.facebook.com/Fabscan", 
            "title": "Facebook"
        }, 
        {
            "location": "/community/#twitter", 
            "text": "Tweets about FabScan can be found on Twitter.  https://www.twitter.com/l_k3", 
            "title": "Twitter"
        }, 
        {
            "location": "/faq/", 
            "text": "Software\n\n\nHardware\n\n\nScanning Issues\n\n\nOther\n\n\n\n\nSoftware\n\n\n\n\nWhat username and password do I need for login the FabScanPi?\n\n\n\n\nThe username / password is the same as in the standard raspbian configuration: \n\n\nUsername: \npi\n \n\n  Password: \nraspberry\n\n\n\u200b\n\n\n\n\nDo I have to perform the calibration every time when I restart my FabScanPi?\n\n\n\n\nNo, the calibration data will be stored. We recommend to perform a calibration every time when the FabScanPi has been shipped, modified or the scan results show signs of deformation.\n\n\n\u200b\n\n\n\n\nThe calibrations fails every time. What can I do?\n\n\n\n\nThe laser and the LED-light are needed for the calibration, they must be installed and be able to work. Make sure the box is closed during calibration so that no external light can cause problems. \n\n\n\u200b\n\n\n\n\nWhere can I find the calibration file?\n\n\n\n\nYou can find it in the folder: \n/etc/fabscanpi\n\n\nThe config file is named : \ndefault.config.json\n\n\n\n\nWhere can I find the initial settings of the LED-light, Camera brightness, contrast and saturation?\n\n\n\n\nYou can find it in the folder: \n/etc/fabscanpi\n\n\nThe config file is named : \ndefault.settings.json\n\n\n\u200b\n\n\n\n\nWhere can I find the log file?\n\n\n\n\nYou can find it in the folder: \n/var/log/fabscanpi\n\n\nThe config file is named : \nfabscanpi.log\n\n\n\u200b\n\n\n\n\nHow can I view the log file?\n\n\n\n\nYou can see the log file on screen by typing:\n\n\ncat /var/log/fabscanpi/fabscanpi.log\n\n\n\n\u200b\n\n\n\n\nHow can I edit the log file?\n\n\n\n\nYou can edit the log file with the nano editor by typing:\n\n\nsudo nano /var/log/fabscanpi/fabscanpi.log\n\n\n\nTo save the file press \"Ctrl+O\" followed by \"enter\".\n\n\nTo exit the nano editor press \"Ctrl+X\".\n\n\n\u200b\n\n\n\n\nHow can I stop / start the FabScanPi server?\n\n\n\n\nYou can stop the server from the console by typing:\n\n\nsudo /etc/init.d/fabscanpi-server stop\n\n\n\nor to (re) start:\n\n\nsudo /etc/init.d/fabscanpi-server stop\n\n\n\n\u200b\n\n\n\n\nHow can I use the latest (probably unstable) software?\n\n\n\n\nYou must edit the repository settings in the sources list in the console by typing:\n\n\n ```sudo nano /etc/apt/sources.list```\n\n\n\n\u200b\n\n\nAdd a new line to the sources.list that it looks exactly like this:\n\n\ndeb http://archive.fabscan.org/ testing main\n\n\n\u200b\n\n\nAdd a hash sign (#) in front of the already existing 'fabscan.archive.org' line so that it looks like:\n\n\n# deb http://archive.fabscan.org/ jessie main\n \n\n\nor\n\n\n# deb http://archive.fabscan.org/ stable main\n\n\nINFO: The '#' disables the packet sources in the line\n\n\n\u200b\n\n\n\n\nNOTE: In newer images the entry is called \nstable\n instead of \njessie\n\n\nThis will change the update source to the testing directory. \n\n\nNOTE: To switch back to the official release you need to remove the # from the 2nd line and place it in front of the 3rd line.\n\n\nTo save your changes press CTRL + O, then ENTER and exit with CTRL + X\n\n\n\u200b\n\n\nNow do an update and dist-upgrade:\n\n\n$ sudo apt-get update\n$ sudo apt-get dist-upgrade\n\n\n\n\u200b\n\n\nFinally you should reboot the FabScanPi:\n\n\n$ sudo reboot now\n\n\n\n\u200b\n\n\nAlternatively you can switch off - switch on your FabScanPi\n\n\n\u200b\n\n\nNOTE: Now you will use the testing data source. Because it is not officially released there will be NO SUPPORT for this version.\n\n\n\u200b\n\n\n\n\nHow can I switch back to an older version (stable) of the software?\n\n\n\n\nYou must know the number of the older version you want to step back to (e.g.: 0.4.0-b373) :\n\n\nOpen a console (or remote ssh-console).\n\n\nType in: \nsudo apt-get install fabscanpi-server=0.4.0-b373\n\n\nFollow the questions in the installation procedure and finally restart the FabScanPi again.\n\n\nNOTE: Please make sure you selected the correct packet source in the \n/etc/apt/sources.list\n\n\n\u200b\n\n\nHardware\n\n\n\n\nWhat power source(s) do I need to get my FabScanPi working?\n\n\n\n\nThe FabScanPi will need 12V DC and 5V DC. There are different options to fulfil this requirement:\n\n\nOption A:\n Connect 12V DC to the HAT (round connector) and install a 12V DC - to - 5V DC regulator on the designated space on the HAT. \n\n\nNOTE: For details and specifications please consult the hardware chapter.\n\n\nOption B:\n Connect 12V DC to the HAT (round connector) and 5V DC to the raspberry (micro USB                                 connector). \n\n\nNOTE: Make sure you switch on the both power sources at the same time to avoid software trouble.\n\n\nOption C:\n Connect 12V DC to the HAT (round connector) and connect a 5V DC power source to the 5V pin regulator pin on the HAT. \n\n\nNOTE: For details and specifications please consult the hardware chapter.\n\n\n\n\nWhat is the rotating direction of the scan table?\n\n\n\n\nIt should move clockwise \u2013 if not please consult the hardware chapter of our documentation and check the connection of your stepper.\n\n\n\n\nWhich camera will work?\n\n\n\n\nFabScan Pi can be built with both Raspberry Pi Camera Modules V 1.x or V 2.x.\n\n\n\n\nI have a Raspberry Cam Module with NoIR. Can I use it?\n\n\n\n\nThere\u2019s no advantage in using the NoIR cam. The algorithms for the laser detection are made for the normal cam. Therefore we recommend to use the normal camera modules.\n\n\n\n\nIs the LED-Ring / PCB-board with LEDs mandatory?\n\n\n\n\nYes, because the light is needed to perform the calibration. It is also necessary to archive good quality texture scans.\n\n\n\n\nWhich LED-ring is compatible?\n\n\n\n\nAny ring using WS2812B LEDs (or compatible) will do. To avoid problems with the calibration we suggest using the FabScanPi LED-board.\n\n\n\n\nMy servo stepper / servo isn't working\n\n\n\n\nThere is no implementation for the servo/stepper to move the laser until now.\n\n\n\n\nNo connection to Arduino, how can i fix that?\n\n\n\n\nWhen your FabScanPi-Server version is 0.5.0 and your avrdude version is Version 6.3-20171130 ( check for version with avrdude -v )\n   then edit the file \n/usr/bin/avrdude-autoreset\n and replace all \navrdude-original\n with \navrdude\n. Upgrade to the newest FabScanpi-Server\n   version \n= 0.6.0 and you are done. After a restart it should work like usual. \n   Keep in mind that it is more recommended to use the newest version of the image which will include a working fix. \n\n\nFirst you need to find out more about the problem. Have a look to the log file (see \"How can i view the log file?\" in F.A.Q.). \n   Find the section where the init sequence of the server starts. Look for the folowing line ... \n\n\nfabscan.server - INFO - FabScanPi-Server 0.4.2\n\n\nIf the next lines look like the the debug output below, the fabscanpi-server is not able to flash the firmware \n   to the FabScanPi-HAT (or Arduino).\n\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - No FabScanPi HAT or compatible device found on port /dev/ttyAMA0\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - Fatal FabScanPi HAT or compatible connection error....\n\nfabscan.scanner.laserscanner.FSHardwareController - DEBUG - Reset FabScanPi HAT...\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - 'NoneType' object has no attribute 'write'\n\nfabscan.scanner.laserscanner.FSSerial - DEBUG - 'NoneType' object has no attribute 'readline'\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - 'NoneType' object has no attribute 'write'\n\n\n\nIf this error occurs by the first run please start reading with 1. In case this error occurs after an fabscanpi-server update \n   and your software worked before, continue reading with 2. \n\n\n\n\n  1. First double check the solder joints of the 40-pin Header of the FabScanPi-HAT. If you are sure that there are no 'cold' solder joints move on \n    reading, otherwise resolder those joints. Try again and have a look to the logs. If the error still occurs continue reading with 3.\n\n  2. Check if your fabscanpi-server version is 0.4.2 or higher. Have a look into your default.config.json and check the serial baudrate. It should be 57600 for fabscanpi-server \n= 0.4.2. \n    If you changed the baudrate and the error still occurs continue with reading 3.\n\n  3. Your bootloader is bricked, what means that you need to flash a new bootloader to your FabScanPi HAT. Continue with reading \"How to flash the FabScanPi HAT Bootloader?\"\n\n\n\n\n\n\n\nHow to flash the FabScanPi HAT Bootloader?\n\n\n\n\nOption A: Using Raspberry Pi for flashing.\n\n\nConnect the FabScanPi HAT pins as described below. (solder some wires to the solder pads). Use a resistor 2k2...5k6 in series for every signal. (see picture for details)\n\n\nRPi  -\n Target\nIO25 -\n Reset\nIO11 -\n SCK\nIO10 -\n MOSI\nIO9  -\n MISO\nGND  -\n GND\n\n\n\n\n\n\n\n Download bootloader:\n\n\n\n\n$ wget https://github.com/watterott/RPi-UNO-HAT/raw/master/docs/bloader.hex\n\n\n\nEdit the file \navrdude.conf\n and add the following lines:\n\n\n$ sudo nano /usr/local/etc/avrdude.conf\n\nprogrammer\n  id    = \"pi_isp\";\n  desc  = \"GPIO bitbang\";\n  type  = \"linuxgpio\";\n  reset = 25;\n  sck   = 11;\n  mosi  = 10;\n  miso  = 9;\n;\n\n\n\nFlash bootloader:\n\n\n$ avrdude -c pi_isp -p m328p -e -U flash:w:bloader.hex:i -U lfuse:w:0xFF:m -U hfuse:w:0xD6:m -U efuse:w:0x05:m -U lock:w:0x0F:m\n\n\n\nOption B: Using Arduino Uno (device \nttyACM0\n or \nttyUSB0\n) for flashing.\n\n\nConnection (Arduino Uno connected to RPi via USB):\n\n\nUno -\n Target\nD10 -\n Reset\nD13 -\n SCK\nD11 -\n MOSI\nD12 -\n MISO\nGND -\n GND\n\n\n\n\n\n\u200b \n\n  Download bootloader and ISP firmware:\n\n\n$ wget https://github.com/watterott/RPi-UNO-HAT/raw/master/docs/bloader.hex\n$ wget https://github.com/watterott/RPi-UNO-HAT/raw/master/docs/isp.hex\n\n\n\nFlash ISP firmware to Arduino Uno:\n\n\n$ avrdude -c arduino -P /dev/ttyUSB0 -b 115200 -p m328p -e -U flash:w:isp.hex:i\n\n\n\nor\n\n\n$ avrdude -c arduino -P /dev/ttyACM0 -b 115200 -p m328p -e -U flash:w:isp.hex:i\n\n\n\nFlash bootloader:\n\n\n$ avrdude -c stk500v1 -P /dev/ttyUSB0 -b 19200 -p m328p -e -U flash:w:bloader.hex:i -U lfuse:w:0xFF:m -U hfuse:w:0xD6:m -U efuse:w:0x05:m -U lock:w:0x0F:m\n\n\n\nor\n\n\n$ avrdude -c stk500v1 -P /dev/ttyACM0 -b 19200 -p m328p -e -U flash:w:bloader.hex:i -U lfuse:w:0xFF:m -U hfuse:w:0xD6:m -U efuse:w:0x05:m -U lock:w:0x0F:m\n\n\n\nScanning issues\n\n\n\n\nMy scan looks like a cylinder\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is the object.\n\n\nThis is the scan.\n\n\n\n\n\n\n\n\nThe problem occurs when the laser is not aligned vertically. The following pictures show\nthe disalignment (blue) and how it should be aligned (red).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDisaligned Laser line\n\n\nAligned Laser line.\n\n\n\n\n\n\n\n\nThe solution for this problem is turning the laser module as long as the line hits\nthe back wall of the scanner vertically. Be sure that the laser also passes the center \nof the turntable ( this can be reached by turning the laser mount)\n\n\n\n\nMy scan looks doubled\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is the object.\n\n\nThis is the scan. The scan looks double.\n\n\n\n\n\n\n\n\nIn this case check the label on your motor. Since the end of 2017 the stepper motor has 400\n steps per full turn. The default config is set to 16x 400 = 6400 steps. If the scan looks like\n on the picture, change the motor steps in the default config to 3200. \n\n\n   \"turntable\": {\n    \"steps\": 3200,\n    \"radius\": 70\n   }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMotor with 400 steps.\n\n\nMotor with 200 steps.\n\n\n\n\n\n\n\n\n\n\nThe turntable is jerking during the scan process what can I do?\n\n\n\n\nThis behavior is quite normal because every time a new image has been shot the table just moves to the next position. If the table is turning smoothly (clockwise) during scan preview everything should be fine.\n\n\n\n\nMy scan is cut-off on top and / or bottom. What can I do?\n\n\n\n\nTry to optimize your scan results by measuring the \"origin_distance\" of your calibration sheet. Correct the value in the configuration. Make sure the size of the black squares on your calibration sheet as the same as \"square_size\" in the calibration file.\n\n\n\n\nThe texture scan is mirror-inverted.\n \n\n\n\n\nCheck the rotating direction of your turntable (and the connection of the stepper motor). Check and adjust your config-settings for the \u201cdimension\u201d-value.\n\n\n\n\nThe laser cannot be detected.\n\n\n\n\nMake sure your laser adjustment is correct. The laser must pass the scanning table right through the center. If no object is on the table the laser should be visible in the preview image (on the rear wall close to the left border of the image).\n\n\n\n\nThe scans don\u2019t have the same shape as the original.\n\n\n\n\nCheck if your laser is aligned in vertical direction. Do another calibration.\n\n\n\n\nCalibrations fails / no \"Calibration finished\" message is displayed\n\n\n\n\nCheck the starting position of the calibration sheet and make sure your box is closed during the scan. The calibration sheet must be placed with a black square in the upper left corner.\n\n\nOther\n\n\ntbd.", 
            "title": "F.A.Q"
        }, 
        {
            "location": "/faq/#software", 
            "text": "What username and password do I need for login the FabScanPi?   The username / password is the same as in the standard raspbian configuration:   Username:  pi   \n  Password:  raspberry  \u200b   Do I have to perform the calibration every time when I restart my FabScanPi?   No, the calibration data will be stored. We recommend to perform a calibration every time when the FabScanPi has been shipped, modified or the scan results show signs of deformation.  \u200b   The calibrations fails every time. What can I do?   The laser and the LED-light are needed for the calibration, they must be installed and be able to work. Make sure the box is closed during calibration so that no external light can cause problems.   \u200b   Where can I find the calibration file?   You can find it in the folder:  /etc/fabscanpi  The config file is named :  default.config.json   Where can I find the initial settings of the LED-light, Camera brightness, contrast and saturation?   You can find it in the folder:  /etc/fabscanpi  The config file is named :  default.settings.json  \u200b   Where can I find the log file?   You can find it in the folder:  /var/log/fabscanpi  The config file is named :  fabscanpi.log  \u200b   How can I view the log file?   You can see the log file on screen by typing:  cat /var/log/fabscanpi/fabscanpi.log  \u200b   How can I edit the log file?   You can edit the log file with the nano editor by typing:  sudo nano /var/log/fabscanpi/fabscanpi.log  To save the file press \"Ctrl+O\" followed by \"enter\".  To exit the nano editor press \"Ctrl+X\".  \u200b   How can I stop / start the FabScanPi server?   You can stop the server from the console by typing:  sudo /etc/init.d/fabscanpi-server stop  or to (re) start:  sudo /etc/init.d/fabscanpi-server stop  \u200b   How can I use the latest (probably unstable) software?   You must edit the repository settings in the sources list in the console by typing:   ```sudo nano /etc/apt/sources.list```  \u200b  Add a new line to the sources.list that it looks exactly like this:  deb http://archive.fabscan.org/ testing main  \u200b  Add a hash sign (#) in front of the already existing 'fabscan.archive.org' line so that it looks like:  # deb http://archive.fabscan.org/ jessie main    or  # deb http://archive.fabscan.org/ stable main  INFO: The '#' disables the packet sources in the line  \u200b   NOTE: In newer images the entry is called  stable  instead of  jessie  This will change the update source to the testing directory.   NOTE: To switch back to the official release you need to remove the # from the 2nd line and place it in front of the 3rd line.  To save your changes press CTRL + O, then ENTER and exit with CTRL + X  \u200b  Now do an update and dist-upgrade:  $ sudo apt-get update\n$ sudo apt-get dist-upgrade  \u200b  Finally you should reboot the FabScanPi:  $ sudo reboot now  \u200b  Alternatively you can switch off - switch on your FabScanPi  \u200b  NOTE: Now you will use the testing data source. Because it is not officially released there will be NO SUPPORT for this version.  \u200b   How can I switch back to an older version (stable) of the software?   You must know the number of the older version you want to step back to (e.g.: 0.4.0-b373) :  Open a console (or remote ssh-console).  Type in:  sudo apt-get install fabscanpi-server=0.4.0-b373  Follow the questions in the installation procedure and finally restart the FabScanPi again.  NOTE: Please make sure you selected the correct packet source in the  /etc/apt/sources.list  \u200b", 
            "title": "Software"
        }, 
        {
            "location": "/faq/#hardware", 
            "text": "What power source(s) do I need to get my FabScanPi working?   The FabScanPi will need 12V DC and 5V DC. There are different options to fulfil this requirement:  Option A:  Connect 12V DC to the HAT (round connector) and install a 12V DC - to - 5V DC regulator on the designated space on the HAT.   NOTE: For details and specifications please consult the hardware chapter.  Option B:  Connect 12V DC to the HAT (round connector) and 5V DC to the raspberry (micro USB                                 connector).   NOTE: Make sure you switch on the both power sources at the same time to avoid software trouble.  Option C:  Connect 12V DC to the HAT (round connector) and connect a 5V DC power source to the 5V pin regulator pin on the HAT.   NOTE: For details and specifications please consult the hardware chapter.   What is the rotating direction of the scan table?   It should move clockwise \u2013 if not please consult the hardware chapter of our documentation and check the connection of your stepper.   Which camera will work?   FabScan Pi can be built with both Raspberry Pi Camera Modules V 1.x or V 2.x.   I have a Raspberry Cam Module with NoIR. Can I use it?   There\u2019s no advantage in using the NoIR cam. The algorithms for the laser detection are made for the normal cam. Therefore we recommend to use the normal camera modules.   Is the LED-Ring / PCB-board with LEDs mandatory?   Yes, because the light is needed to perform the calibration. It is also necessary to archive good quality texture scans.   Which LED-ring is compatible?   Any ring using WS2812B LEDs (or compatible) will do. To avoid problems with the calibration we suggest using the FabScanPi LED-board.   My servo stepper / servo isn't working   There is no implementation for the servo/stepper to move the laser until now.   No connection to Arduino, how can i fix that?   When your FabScanPi-Server version is 0.5.0 and your avrdude version is Version 6.3-20171130 ( check for version with avrdude -v )\n   then edit the file  /usr/bin/avrdude-autoreset  and replace all  avrdude-original  with  avrdude . Upgrade to the newest FabScanpi-Server\n   version  = 0.6.0 and you are done. After a restart it should work like usual. \n   Keep in mind that it is more recommended to use the newest version of the image which will include a working fix.   First you need to find out more about the problem. Have a look to the log file (see \"How can i view the log file?\" in F.A.Q.). \n   Find the section where the init sequence of the server starts. Look for the folowing line ...   fabscan.server - INFO - FabScanPi-Server 0.4.2  If the next lines look like the the debug output below, the fabscanpi-server is not able to flash the firmware \n   to the FabScanPi-HAT (or Arduino).  fabscan.scanner.laserscanner.FSSerial - ERROR - No FabScanPi HAT or compatible device found on port /dev/ttyAMA0\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - Fatal FabScanPi HAT or compatible connection error....\n\nfabscan.scanner.laserscanner.FSHardwareController - DEBUG - Reset FabScanPi HAT...\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - 'NoneType' object has no attribute 'write'\n\nfabscan.scanner.laserscanner.FSSerial - DEBUG - 'NoneType' object has no attribute 'readline'\n\nfabscan.scanner.laserscanner.FSSerial - ERROR - 'NoneType' object has no attribute 'write'  If this error occurs by the first run please start reading with 1. In case this error occurs after an fabscanpi-server update \n   and your software worked before, continue reading with 2.      1. First double check the solder joints of the 40-pin Header of the FabScanPi-HAT. If you are sure that there are no 'cold' solder joints move on \n    reading, otherwise resolder those joints. Try again and have a look to the logs. If the error still occurs continue reading with 3.\n\n  2. Check if your fabscanpi-server version is 0.4.2 or higher. Have a look into your default.config.json and check the serial baudrate. It should be 57600 for fabscanpi-server  = 0.4.2. \n    If you changed the baudrate and the error still occurs continue with reading 3.\n\n  3. Your bootloader is bricked, what means that you need to flash a new bootloader to your FabScanPi HAT. Continue with reading \"How to flash the FabScanPi HAT Bootloader?\"    How to flash the FabScanPi HAT Bootloader?   Option A: Using Raspberry Pi for flashing.  Connect the FabScanPi HAT pins as described below. (solder some wires to the solder pads). Use a resistor 2k2...5k6 in series for every signal. (see picture for details)  RPi  -  Target\nIO25 -  Reset\nIO11 -  SCK\nIO10 -  MOSI\nIO9  -  MISO\nGND  -  GND   \n Download bootloader:   $ wget https://github.com/watterott/RPi-UNO-HAT/raw/master/docs/bloader.hex  Edit the file  avrdude.conf  and add the following lines:  $ sudo nano /usr/local/etc/avrdude.conf\n\nprogrammer\n  id    = \"pi_isp\";\n  desc  = \"GPIO bitbang\";\n  type  = \"linuxgpio\";\n  reset = 25;\n  sck   = 11;\n  mosi  = 10;\n  miso  = 9;\n;  Flash bootloader:  $ avrdude -c pi_isp -p m328p -e -U flash:w:bloader.hex:i -U lfuse:w:0xFF:m -U hfuse:w:0xD6:m -U efuse:w:0x05:m -U lock:w:0x0F:m  Option B: Using Arduino Uno (device  ttyACM0  or  ttyUSB0 ) for flashing.  Connection (Arduino Uno connected to RPi via USB):  Uno -  Target\nD10 -  Reset\nD13 -  SCK\nD11 -  MOSI\nD12 -  MISO\nGND -  GND  \n\u200b  \n  Download bootloader and ISP firmware:  $ wget https://github.com/watterott/RPi-UNO-HAT/raw/master/docs/bloader.hex\n$ wget https://github.com/watterott/RPi-UNO-HAT/raw/master/docs/isp.hex  Flash ISP firmware to Arduino Uno:  $ avrdude -c arduino -P /dev/ttyUSB0 -b 115200 -p m328p -e -U flash:w:isp.hex:i  or  $ avrdude -c arduino -P /dev/ttyACM0 -b 115200 -p m328p -e -U flash:w:isp.hex:i  Flash bootloader:  $ avrdude -c stk500v1 -P /dev/ttyUSB0 -b 19200 -p m328p -e -U flash:w:bloader.hex:i -U lfuse:w:0xFF:m -U hfuse:w:0xD6:m -U efuse:w:0x05:m -U lock:w:0x0F:m  or  $ avrdude -c stk500v1 -P /dev/ttyACM0 -b 19200 -p m328p -e -U flash:w:bloader.hex:i -U lfuse:w:0xFF:m -U hfuse:w:0xD6:m -U efuse:w:0x05:m -U lock:w:0x0F:m", 
            "title": "Hardware"
        }, 
        {
            "location": "/faq/#scanning-issues", 
            "text": "My scan looks like a cylinder            This is the object.  This is the scan.     The problem occurs when the laser is not aligned vertically. The following pictures show\nthe disalignment (blue) and how it should be aligned (red).           Disaligned Laser line  Aligned Laser line.     The solution for this problem is turning the laser module as long as the line hits\nthe back wall of the scanner vertically. Be sure that the laser also passes the center \nof the turntable ( this can be reached by turning the laser mount)   My scan looks doubled            This is the object.  This is the scan. The scan looks double.     In this case check the label on your motor. Since the end of 2017 the stepper motor has 400\n steps per full turn. The default config is set to 16x 400 = 6400 steps. If the scan looks like\n on the picture, change the motor steps in the default config to 3200.      \"turntable\": {\n    \"steps\": 3200,\n    \"radius\": 70\n   }           Motor with 400 steps.  Motor with 200 steps.      The turntable is jerking during the scan process what can I do?   This behavior is quite normal because every time a new image has been shot the table just moves to the next position. If the table is turning smoothly (clockwise) during scan preview everything should be fine.   My scan is cut-off on top and / or bottom. What can I do?   Try to optimize your scan results by measuring the \"origin_distance\" of your calibration sheet. Correct the value in the configuration. Make sure the size of the black squares on your calibration sheet as the same as \"square_size\" in the calibration file.   The texture scan is mirror-inverted.     Check the rotating direction of your turntable (and the connection of the stepper motor). Check and adjust your config-settings for the \u201cdimension\u201d-value.   The laser cannot be detected.   Make sure your laser adjustment is correct. The laser must pass the scanning table right through the center. If no object is on the table the laser should be visible in the preview image (on the rear wall close to the left border of the image).   The scans don\u2019t have the same shape as the original.   Check if your laser is aligned in vertical direction. Do another calibration.   Calibrations fails / no \"Calibration finished\" message is displayed   Check the starting position of the calibration sheet and make sure your box is closed during the scan. The calibration sheet must be placed with a black square in the upper left corner.", 
            "title": "Scanning issues"
        }, 
        {
            "location": "/faq/#other", 
            "text": "tbd.", 
            "title": "Other"
        }
    ]
}